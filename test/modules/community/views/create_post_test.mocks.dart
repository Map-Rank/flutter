// Mocks generated by Mockito 5.4.4 from annotations
// in mapnrank/test/modules/community/views/create_post_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:get/get.dart' as _i3;
import 'package:mapnrank/app/models/post_model.dart' as _i2;
import 'package:mapnrank/app/models/user_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Post].
///
/// See the documentation for Mockito's code generation for more information.
class MockPost extends _i1.Mock implements _i2.Post {
  @override
  set content(String? _content) => super.noSuchMethod(
        Invocation.setter(
          #content,
          _content,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set publishedDate(String? _publishedDate) => super.noSuchMethod(
        Invocation.setter(
          #publishedDate,
          _publishedDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set zone(dynamic _zone) => super.noSuchMethod(
        Invocation.setter(
          #zone,
          _zone,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set zonePostId(dynamic _zonePostId) => super.noSuchMethod(
        Invocation.setter(
          #zonePostId,
          _zonePostId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set zoneLevelId(dynamic _zoneLevelId) => super.noSuchMethod(
        Invocation.setter(
          #zoneLevelId,
          _zoneLevelId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set zoneParentId(dynamic _zoneParentId) => super.noSuchMethod(
        Invocation.setter(
          #zoneParentId,
          _zoneParentId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set postSectors(dynamic _postSectors) => super.noSuchMethod(
        Invocation.setter(
          #postSectors,
          _postSectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set postId(int? _postId) => super.noSuchMethod(
        Invocation.setter(
          #postId,
          _postId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set sectors(List<dynamic>? _sectors) => super.noSuchMethod(
        Invocation.setter(
          #sectors,
          _sectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set imagesUrl(List<dynamic>? _imagesUrl) => super.noSuchMethod(
        Invocation.setter(
          #imagesUrl,
          _imagesUrl,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set commentCount(_i3.RxInt? _commentCount) => super.noSuchMethod(
        Invocation.setter(
          #commentCount,
          _commentCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set shareCount(_i3.RxInt? _shareCount) => super.noSuchMethod(
        Invocation.setter(
          #shareCount,
          _shareCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set likeCount(_i3.RxInt? _likeCount) => super.noSuchMethod(
        Invocation.setter(
          #likeCount,
          _likeCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set likeTapped(_i3.RxBool? _likeTapped) => super.noSuchMethod(
        Invocation.setter(
          #likeTapped,
          _likeTapped,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set commentTapped(bool? _commentTapped) => super.noSuchMethod(
        Invocation.setter(
          #commentTapped,
          _commentTapped,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set shareTapped(bool? _shareTapped) => super.noSuchMethod(
        Invocation.setter(
          #shareTapped,
          _shareTapped,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isFollowing(_i3.RxBool? _isFollowing) => super.noSuchMethod(
        Invocation.setter(
          #isFollowing,
          _isFollowing,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set user(_i4.UserModel? _user) => super.noSuchMethod(
        Invocation.setter(
          #user,
          _user,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set liked(bool? _liked) => super.noSuchMethod(
        Invocation.setter(
          #liked,
          _liked,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set imagesFilePaths(List<dynamic>? _imagesFilePaths) => super.noSuchMethod(
        Invocation.setter(
          #imagesFilePaths,
          _imagesFilePaths,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set commentList(List<dynamic>? _commentList) => super.noSuchMethod(
        Invocation.setter(
          #commentList,
          _commentList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set id(String? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasData => (super.noSuchMethod(
        Invocation.getter(#hasData),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  void fromJson(Map<String, dynamic>? json) => super.noSuchMethod(
        Invocation.method(
          #fromJson,
          [json],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String stringFromJson(
    Map<String, dynamic>? json,
    String? attribute, {
    String? defaultValue = r'',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #stringFromJson,
          [
            json,
            attribute,
          ],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #stringFromJson,
            [
              json,
              attribute,
            ],
            {#defaultValue: defaultValue},
          ),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #stringFromJson,
            [
              json,
              attribute,
            ],
            {#defaultValue: defaultValue},
          ),
        ),
      ) as String);

  @override
  DateTime dateFromJson(
    Map<String, dynamic>? json,
    String? attribute, {
    required DateTime? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #dateFromJson,
          [
            json,
            attribute,
          ],
          {#defaultValue: defaultValue},
        ),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.method(
            #dateFromJson,
            [
              json,
              attribute,
            ],
            {#defaultValue: defaultValue},
          ),
        ),
        returnValueForMissingStub: _FakeDateTime_0(
          this,
          Invocation.method(
            #dateFromJson,
            [
              json,
              attribute,
            ],
            {#defaultValue: defaultValue},
          ),
        ),
      ) as DateTime);

  @override
  dynamic mapFromJson(
    Map<String, dynamic>? json,
    String? attribute, {
    required Map<dynamic, dynamic>? defaultValue,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #mapFromJson,
          [
            json,
            attribute,
          ],
          {#defaultValue: defaultValue},
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic listFromJson(
    Map<String, dynamic>? json,
    dynamic attribute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #listFromJson,
          [
            json,
            attribute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int intFromJson(
    Map<String, dynamic>? json,
    String? attribute, {
    int? defaultValue = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #intFromJson,
          [
            json,
            attribute,
          ],
          {#defaultValue: defaultValue},
        ),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  double doubleFromJson(
    Map<String, dynamic>? json,
    String? attribute, {
    int? decimal = 2,
    double? defaultValue = 0.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #doubleFromJson,
          [
            json,
            attribute,
          ],
          {
            #decimal: decimal,
            #defaultValue: defaultValue,
          },
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  bool boolFromJson(
    Map<String, dynamic>? json,
    String? attribute, {
    bool? defaultValue = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #boolFromJson,
          [
            json,
            attribute,
          ],
          {#defaultValue: defaultValue},
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
