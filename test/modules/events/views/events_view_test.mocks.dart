// Mocks generated by Mockito 5.4.4 from annotations
// in mapnrank/test/modules/events/views/events_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:ui' as _i14;

import 'package:flutter/material.dart' as _i5;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i13;
import 'package:image_picker/image_picker.dart' as _i12;
import 'package:mapnrank/app/models/event_model.dart' as _i4;
import 'package:mapnrank/app/models/user_model.dart' as _i10;
import 'package:mapnrank/app/modules/events/controllers/events_controller.dart'
    as _i9;
import 'package:mapnrank/app/repositories/events_repository.dart' as _i3;
import 'package:mapnrank/app/repositories/sector_repository.dart' as _i8;
import 'package:mapnrank/app/repositories/user_repository.dart' as _i6;
import 'package:mapnrank/app/repositories/zone_repository.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRx_0<T> extends _i1.SmartFake implements _i2.Rx<T> {
  _FakeRx_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxString_1 extends _i1.SmartFake implements _i2.RxString {
  _FakeRxString_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventsRepository_2 extends _i1.SmartFake
    implements _i3.EventsRepository {
  _FakeEventsRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_3<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_4 extends _i1.SmartFake implements _i2.RxBool {
  _FakeRxBool_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_5 extends _i1.SmartFake implements _i4.Event {
  _FakeEvent_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeScrollController_6 extends _i1.SmartFake
    implements _i5.ScrollController {
  _FakeScrollController_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxInt_7 extends _i1.SmartFake implements _i2.RxInt {
  _FakeRxInt_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserRepository_8 extends _i1.SmartFake
    implements _i6.UserRepository {
  _FakeUserRepository_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeZoneRepository_9 extends _i1.SmartFake
    implements _i7.ZoneRepository {
  _FakeZoneRepository_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSectorRepository_10 extends _i1.SmartFake
    implements _i8.SectorRepository {
  _FakeSectorRepository_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_11 extends _i1.SmartFake
    implements _i5.TextEditingController {
  _FakeTextEditingController_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_12<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EventsController].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsController extends _i1.Mock implements _i9.EventsController {
  @override
  _i2.Rx<_i10.UserModel> get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeRx_0<_i10.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeRx_0<_i10.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i2.Rx<_i10.UserModel>);

  @override
  set currentUser(_i2.Rx<_i10.UserModel>? _currentUser) => super.noSuchMethod(
        Invocation.setter(
          #currentUser,
          _currentUser,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get startingDate => (super.noSuchMethod(
        Invocation.getter(#startingDate),
        returnValue: _FakeRxString_1(
          this,
          Invocation.getter(#startingDate),
        ),
        returnValueForMissingStub: _FakeRxString_1(
          this,
          Invocation.getter(#startingDate),
        ),
      ) as _i2.RxString);

  @override
  set startingDate(_i2.RxString? _startingDate) => super.noSuchMethod(
        Invocation.setter(
          #startingDate,
          _startingDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get endingDate => (super.noSuchMethod(
        Invocation.getter(#endingDate),
        returnValue: _FakeRxString_1(
          this,
          Invocation.getter(#endingDate),
        ),
        returnValueForMissingStub: _FakeRxString_1(
          this,
          Invocation.getter(#endingDate),
        ),
      ) as _i2.RxString);

  @override
  set endingDate(_i2.RxString? _endingDate) => super.noSuchMethod(
        Invocation.setter(
          #endingDate,
          _endingDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.EventsRepository get eventsRepository => (super.noSuchMethod(
        Invocation.getter(#eventsRepository),
        returnValue: _FakeEventsRepository_2(
          this,
          Invocation.getter(#eventsRepository),
        ),
        returnValueForMissingStub: _FakeEventsRepository_2(
          this,
          Invocation.getter(#eventsRepository),
        ),
      ) as _i3.EventsRepository);

  @override
  set eventsRepository(_i3.EventsRepository? _eventsRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventsRepository,
          _eventsRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get allEvents => (super.noSuchMethod(
        Invocation.getter(#allEvents),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#allEvents),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#allEvents),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set allEvents(_i2.RxList<dynamic>? _allEvents) => super.noSuchMethod(
        Invocation.setter(
          #allEvents,
          _allEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get imageFiles => (super.noSuchMethod(
        Invocation.getter(#imageFiles),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#imageFiles),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#imageFiles),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set imageFiles(_i2.RxList<dynamic>? _imageFiles) => super.noSuchMethod(
        Invocation.setter(
          #imageFiles,
          _imageFiles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<dynamic> get listAllEvents => (super.noSuchMethod(
        Invocation.getter(#listAllEvents),
        returnValue: <dynamic>[],
        returnValueForMissingStub: <dynamic>[],
      ) as List<dynamic>);

  @override
  set listAllEvents(List<dynamic>? _listAllEvents) => super.noSuchMethod(
        Invocation.setter(
          #listAllEvents,
          _listAllEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingEvents => (super.noSuchMethod(
        Invocation.getter(#loadingEvents),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingEvents),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingEvents),
        ),
      ) as _i2.RxBool);

  @override
  set loadingEvents(_i2.RxBool? _loadingEvents) => super.noSuchMethod(
        Invocation.setter(
          #loadingEvents,
          _loadingEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get createEvents => (super.noSuchMethod(
        Invocation.getter(#createEvents),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#createEvents),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#createEvents),
        ),
      ) as _i2.RxBool);

  @override
  set createEvents(_i2.RxBool? _createEvents) => super.noSuchMethod(
        Invocation.setter(
          #createEvents,
          _createEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get createUpdateEvents => (super.noSuchMethod(
        Invocation.getter(#createUpdateEvents),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#createUpdateEvents),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#createUpdateEvents),
        ),
      ) as _i2.RxBool);

  @override
  set createUpdateEvents(_i2.RxBool? _createUpdateEvents) => super.noSuchMethod(
        Invocation.setter(
          #createUpdateEvents,
          _createUpdateEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get updateEvents => (super.noSuchMethod(
        Invocation.getter(#updateEvents),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#updateEvents),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#updateEvents),
        ),
      ) as _i2.RxBool);

  @override
  set updateEvents(_i2.RxBool? _updateEvents) => super.noSuchMethod(
        Invocation.setter(
          #updateEvents,
          _updateEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get searchField => (super.noSuchMethod(
        Invocation.getter(#searchField),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#searchField),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#searchField),
        ),
      ) as _i2.RxBool);

  @override
  set searchField(_i2.RxBool? _searchField) => super.noSuchMethod(
        Invocation.setter(
          #searchField,
          _searchField,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get noFilter => (super.noSuchMethod(
        Invocation.getter(#noFilter),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#noFilter),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#noFilter),
        ),
      ) as _i2.RxBool);

  @override
  set noFilter(_i2.RxBool? _noFilter) => super.noSuchMethod(
        Invocation.setter(
          #noFilter,
          _noFilter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get page => (super.noSuchMethod(
        Invocation.getter(#page),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set page(int? _page) => super.noSuchMethod(
        Invocation.setter(
          #page,
          _page,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Event get event => (super.noSuchMethod(
        Invocation.getter(#event),
        returnValue: _FakeEvent_5(
          this,
          Invocation.getter(#event),
        ),
        returnValueForMissingStub: _FakeEvent_5(
          this,
          Invocation.getter(#event),
        ),
      ) as _i4.Event);

  @override
  set event(_i4.Event? _event) => super.noSuchMethod(
        Invocation.setter(
          #event,
          _event,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Event get eventDetails => (super.noSuchMethod(
        Invocation.getter(#eventDetails),
        returnValue: _FakeEvent_5(
          this,
          Invocation.getter(#eventDetails),
        ),
        returnValueForMissingStub: _FakeEvent_5(
          this,
          Invocation.getter(#eventDetails),
        ),
      ) as _i4.Event);

  @override
  set eventDetails(_i4.Event? _eventDetails) => super.noSuchMethod(
        Invocation.setter(
          #eventDetails,
          _eventDetails,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.ScrollController get scrollbarController => (super.noSuchMethod(
        Invocation.getter(#scrollbarController),
        returnValue: _FakeScrollController_6(
          this,
          Invocation.getter(#scrollbarController),
        ),
        returnValueForMissingStub: _FakeScrollController_6(
          this,
          Invocation.getter(#scrollbarController),
        ),
      ) as _i5.ScrollController);

  @override
  set scrollbarController(_i5.ScrollController? _scrollbarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #scrollbarController,
          _scrollbarController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingRegions => (super.noSuchMethod(
        Invocation.getter(#loadingRegions),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingRegions),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingRegions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingRegions(_i2.RxBool? _loadingRegions) => super.noSuchMethod(
        Invocation.setter(
          #loadingRegions,
          _loadingRegions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get regions => (super.noSuchMethod(
        Invocation.getter(#regions),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#regions),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#regions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set regions(_i2.RxList<dynamic>? _regions) => super.noSuchMethod(
        Invocation.setter(
          #regions,
          _regions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get regionSelected => (super.noSuchMethod(
        Invocation.getter(#regionSelected),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#regionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#regionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set regionSelected(_i2.RxBool? _regionSelected) => super.noSuchMethod(
        Invocation.setter(
          #regionSelected,
          _regionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get regionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#regionSelectedIndex),
        returnValue: _FakeRxInt_7(
          this,
          Invocation.getter(#regionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_7(
          this,
          Invocation.getter(#regionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set regionSelectedIndex(_i2.RxInt? _regionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #regionSelectedIndex,
          _regionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listRegions => (super.noSuchMethod(
        Invocation.getter(#listRegions),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#listRegions),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#listRegions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listRegions(_i2.RxList<dynamic>? _listRegions) => super.noSuchMethod(
        Invocation.setter(
          #listRegions,
          _listRegions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get regionsSet => (super.noSuchMethod(
        Invocation.getter(#regionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set regionsSet(Map<dynamic, dynamic>? _regionsSet) => super.noSuchMethod(
        Invocation.setter(
          #regionsSet,
          _regionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get regionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#regionSelectedValue),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#regionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#regionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set regionSelectedValue(_i2.RxList<dynamic>? _regionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #regionSelectedValue,
          _regionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingDivisions => (super.noSuchMethod(
        Invocation.getter(#loadingDivisions),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingDivisions),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingDivisions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingDivisions(_i2.RxBool? _loadingDivisions) => super.noSuchMethod(
        Invocation.setter(
          #loadingDivisions,
          _loadingDivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get divisions => (super.noSuchMethod(
        Invocation.getter(#divisions),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#divisions),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#divisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set divisions(_i2.RxList<dynamic>? _divisions) => super.noSuchMethod(
        Invocation.setter(
          #divisions,
          _divisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get divisionSelected => (super.noSuchMethod(
        Invocation.getter(#divisionSelected),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#divisionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#divisionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set divisionSelected(_i2.RxBool? _divisionSelected) => super.noSuchMethod(
        Invocation.setter(
          #divisionSelected,
          _divisionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get divisionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#divisionSelectedValue),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#divisionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#divisionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set divisionSelectedValue(_i2.RxList<dynamic>? _divisionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #divisionSelectedValue,
          _divisionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get divisionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#divisionSelectedIndex),
        returnValue: _FakeRxInt_7(
          this,
          Invocation.getter(#divisionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_7(
          this,
          Invocation.getter(#divisionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set divisionSelectedIndex(_i2.RxInt? _divisionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #divisionSelectedIndex,
          _divisionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listDivisions => (super.noSuchMethod(
        Invocation.getter(#listDivisions),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#listDivisions),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#listDivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listDivisions(_i2.RxList<dynamic>? _listDivisions) => super.noSuchMethod(
        Invocation.setter(
          #listDivisions,
          _listDivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get divisionsSet => (super.noSuchMethod(
        Invocation.getter(#divisionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set divisionsSet(Map<dynamic, dynamic>? _divisionsSet) => super.noSuchMethod(
        Invocation.setter(
          #divisionsSet,
          _divisionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingSubdivisions => (super.noSuchMethod(
        Invocation.getter(#loadingSubdivisions),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingSubdivisions),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingSubdivisions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingSubdivisions(_i2.RxBool? _loadingSubdivisions) =>
      super.noSuchMethod(
        Invocation.setter(
          #loadingSubdivisions,
          _loadingSubdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get subdivisions => (super.noSuchMethod(
        Invocation.getter(#subdivisions),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#subdivisions),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#subdivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set subdivisions(_i2.RxList<dynamic>? _subdivisions) => super.noSuchMethod(
        Invocation.setter(
          #subdivisions,
          _subdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get subdivisionSelected => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelected),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#subdivisionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#subdivisionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set subdivisionSelected(_i2.RxBool? _subdivisionSelected) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelected,
          _subdivisionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get subdivisionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelectedValue),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#subdivisionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#subdivisionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set subdivisionSelectedValue(
          _i2.RxList<dynamic>? _subdivisionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelectedValue,
          _subdivisionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get subdivisionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelectedIndex),
        returnValue: _FakeRxInt_7(
          this,
          Invocation.getter(#subdivisionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_7(
          this,
          Invocation.getter(#subdivisionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set subdivisionSelectedIndex(_i2.RxInt? _subdivisionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelectedIndex,
          _subdivisionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listSubdivisions => (super.noSuchMethod(
        Invocation.getter(#listSubdivisions),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#listSubdivisions),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#listSubdivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listSubdivisions(_i2.RxList<dynamic>? _listSubdivisions) =>
      super.noSuchMethod(
        Invocation.setter(
          #listSubdivisions,
          _listSubdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get subdivisionsSet => (super.noSuchMethod(
        Invocation.getter(#subdivisionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set subdivisionsSet(Map<dynamic, dynamic>? _subdivisionsSet) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionsSet,
          _subdivisionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingSectors => (super.noSuchMethod(
        Invocation.getter(#loadingSectors),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingSectors),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#loadingSectors),
        ),
      ) as _i2.RxBool);

  @override
  set loadingSectors(_i2.RxBool? _loadingSectors) => super.noSuchMethod(
        Invocation.setter(
          #loadingSectors,
          _loadingSectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sectors => (super.noSuchMethod(
        Invocation.getter(#sectors),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#sectors),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#sectors),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sectors(_i2.RxList<dynamic>? _sectors) => super.noSuchMethod(
        Invocation.setter(
          #sectors,
          _sectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sectorsSelected => (super.noSuchMethod(
        Invocation.getter(#sectorsSelected),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#sectorsSelected),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#sectorsSelected),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sectorsSelected(_i2.RxList<dynamic>? _sectorsSelected) =>
      super.noSuchMethod(
        Invocation.setter(
          #sectorsSelected,
          _sectorsSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: _FakeRxInt_7(
          this,
          Invocation.getter(#selectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_7(
          this,
          Invocation.getter(#selectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set selectedIndex(_i2.RxInt? _selectedIndex) => super.noSuchMethod(
        Invocation.setter(
          #selectedIndex,
          _selectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listSectors => (super.noSuchMethod(
        Invocation.getter(#listSectors),
        returnValue: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#listSectors),
        ),
        returnValueForMissingStub: _FakeRxList_3<dynamic>(
          this,
          Invocation.getter(#listSectors),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listSectors(_i2.RxList<dynamic>? _listSectors) => super.noSuchMethod(
        Invocation.setter(
          #listSectors,
          _listSectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get sectorsSet => (super.noSuchMethod(
        Invocation.getter(#sectorsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set sectorsSet(Map<dynamic, dynamic>? _sectorsSet) => super.noSuchMethod(
        Invocation.setter(
          #sectorsSet,
          _sectorsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i6.UserRepository);

  @override
  set userRepository(_i6.UserRepository? _userRepository) => super.noSuchMethod(
        Invocation.setter(
          #userRepository,
          _userRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.ZoneRepository get zoneRepository => (super.noSuchMethod(
        Invocation.getter(#zoneRepository),
        returnValue: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
        returnValueForMissingStub: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
      ) as _i7.ZoneRepository);

  @override
  set zoneRepository(_i7.ZoneRepository? _zoneRepository) => super.noSuchMethod(
        Invocation.setter(
          #zoneRepository,
          _zoneRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.SectorRepository get sectorRepository => (super.noSuchMethod(
        Invocation.getter(#sectorRepository),
        returnValue: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
        returnValueForMissingStub: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
      ) as _i8.SectorRepository);

  @override
  set sectorRepository(_i8.SectorRepository? _sectorRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #sectorRepository,
          _sectorRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseARegion => (super.noSuchMethod(
        Invocation.getter(#chooseARegion),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#chooseARegion),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#chooseARegion),
        ),
      ) as _i2.RxBool);

  @override
  set chooseARegion(_i2.RxBool? _chooseARegion) => super.noSuchMethod(
        Invocation.setter(
          #chooseARegion,
          _chooseARegion,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseADivision => (super.noSuchMethod(
        Invocation.getter(#chooseADivision),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#chooseADivision),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#chooseADivision),
        ),
      ) as _i2.RxBool);

  @override
  set chooseADivision(_i2.RxBool? _chooseADivision) => super.noSuchMethod(
        Invocation.setter(
          #chooseADivision,
          _chooseADivision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseASubDivision => (super.noSuchMethod(
        Invocation.getter(#chooseASubDivision),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#chooseASubDivision),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#chooseASubDivision),
        ),
      ) as _i2.RxBool);

  @override
  set chooseASubDivision(_i2.RxBool? _chooseASubDivision) => super.noSuchMethod(
        Invocation.setter(
          #chooseASubDivision,
          _chooseASubDivision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get inputImage => (super.noSuchMethod(
        Invocation.getter(#inputImage),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#inputImage),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#inputImage),
        ),
      ) as _i2.RxBool);

  @override
  set inputImage(_i2.RxBool? _inputImage) => super.noSuchMethod(
        Invocation.setter(
          #inputImage,
          _inputImage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get filterBySector => (super.noSuchMethod(
        Invocation.getter(#filterBySector),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#filterBySector),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#filterBySector),
        ),
      ) as _i2.RxBool);

  @override
  set filterBySector(_i2.RxBool? _filterBySector) => super.noSuchMethod(
        Invocation.setter(
          #filterBySector,
          _filterBySector,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get filterByLocation => (super.noSuchMethod(
        Invocation.getter(#filterByLocation),
        returnValue: _FakeRxBool_4(
          this,
          Invocation.getter(#filterByLocation),
        ),
        returnValueForMissingStub: _FakeRxBool_4(
          this,
          Invocation.getter(#filterByLocation),
        ),
      ) as _i2.RxBool);

  @override
  set filterByLocation(_i2.RxBool? _filterByLocation) => super.noSuchMethod(
        Invocation.setter(
          #filterByLocation,
          _filterByLocation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.TextEditingController get eventOrganizerController => (super.noSuchMethod(
        Invocation.getter(#eventOrganizerController),
        returnValue: _FakeTextEditingController_11(
          this,
          Invocation.getter(#eventOrganizerController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_11(
          this,
          Invocation.getter(#eventOrganizerController),
        ),
      ) as _i5.TextEditingController);

  @override
  set eventOrganizerController(
          _i5.TextEditingController? _eventOrganizerController) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventOrganizerController,
          _eventOrganizerController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.TextEditingController get eventLocation => (super.noSuchMethod(
        Invocation.getter(#eventLocation),
        returnValue: _FakeTextEditingController_11(
          this,
          Invocation.getter(#eventLocation),
        ),
        returnValueForMissingStub: _FakeTextEditingController_11(
          this,
          Invocation.getter(#eventLocation),
        ),
      ) as _i5.TextEditingController);

  @override
  set eventLocation(_i5.TextEditingController? _eventLocation) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventLocation,
          _eventLocation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.TextEditingController get startingDateDisplay => (super.noSuchMethod(
        Invocation.getter(#startingDateDisplay),
        returnValue: _FakeTextEditingController_11(
          this,
          Invocation.getter(#startingDateDisplay),
        ),
        returnValueForMissingStub: _FakeTextEditingController_11(
          this,
          Invocation.getter(#startingDateDisplay),
        ),
      ) as _i5.TextEditingController);

  @override
  set startingDateDisplay(_i5.TextEditingController? _startingDateDisplay) =>
      super.noSuchMethod(
        Invocation.setter(
          #startingDateDisplay,
          _startingDateDisplay,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.TextEditingController get endingDateDisplay => (super.noSuchMethod(
        Invocation.getter(#endingDateDisplay),
        returnValue: _FakeTextEditingController_11(
          this,
          Invocation.getter(#endingDateDisplay),
        ),
        returnValueForMissingStub: _FakeTextEditingController_11(
          this,
          Invocation.getter(#endingDateDisplay),
        ),
      ) as _i5.TextEditingController);

  @override
  set endingDateDisplay(_i5.TextEditingController? _endingDateDisplay) =>
      super.noSuchMethod(
        Invocation.setter(
          #endingDateDisplay,
          _endingDateDisplay,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_12<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_12<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_12<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_12<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<dynamic> refreshEvents({bool? showMessage = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshEvents,
          [],
          {#showMessage: showMessage},
        ),
        returnValue: _i11.Future<dynamic>.value(),
        returnValueForMissingStub: _i11.Future<dynamic>.value(),
      ) as _i11.Future<dynamic>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<dynamic> pickImage(_i12.ImageSource? source) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [source],
        ),
        returnValue: _i11.Future<dynamic>.value(),
        returnValueForMissingStub: _i11.Future<dynamic>.value(),
      ) as _i11.Future<dynamic>);

  @override
  void filterSearchRegions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchRegions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllDivisions(int? index) => super.noSuchMethod(
        Invocation.method(
          #getAllDivisions,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchDivisions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchDivisions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllSubdivisions(int? index) => super.noSuchMethod(
        Invocation.method(
          #getAllSubdivisions,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchSubdivisions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchSubdivisions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchSectors(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchSectors,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic filterSearchEventsBySubdivisionZone(String? query) =>
      super.noSuchMethod(
        Invocation.method(
          #filterSearchEventsBySubdivisionZone,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic filterSearchEventsByDivisionZone(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchEventsByDivisionZone,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic filterSearchEventsByRegionZone(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchEventsByRegionZone,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getSpecificZone(int? zoneId) => super.noSuchMethod(
        Invocation.method(
          #getSpecificZone,
          [zoneId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllEvents(int? page) => super.noSuchMethod(
        Invocation.method(
          #getAllEvents,
          [page],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAnEvent(int? eventId) => super.noSuchMethod(
        Invocation.method(
          #getAnEvent,
          [eventId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic createEvent(_i4.Event? event) => super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic updateEvent(_i4.Event? event) => super.noSuchMethod(
        Invocation.method(
          #updateEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic deleteEvent(int? eventId) => super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [eventId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Disposer addListener(_i13.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i13.Disposer);

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i14.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Disposer addListenerId(
    Object? key,
    _i13.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i13.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
