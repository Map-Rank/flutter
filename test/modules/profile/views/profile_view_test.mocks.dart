// Mocks generated by Mockito 5.4.4 from annotations
// in mapnrank/test/modules/profile/views/profile_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i16;
import 'dart:io' as _i8;
import 'dart:ui' as _i18;

import 'package:flutter/cupertino.dart' as _i3;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i17;
import 'package:get_storage/get_storage.dart' as _i9;
import 'package:image_picker/image_picker.dart' as _i7;
import 'package:mapnrank/app/models/event_model.dart' as _i13;
import 'package:mapnrank/app/models/post_model.dart' as _i11;
import 'package:mapnrank/app/models/user_model.dart' as _i15;
import 'package:mapnrank/app/modules/auth/controllers/auth_controller.dart'
    as _i19;
import 'package:mapnrank/app/modules/community/controllers/community_controller.dart'
    as _i21;
import 'package:mapnrank/app/modules/events/controllers/events_controller.dart'
    as _i22;
import 'package:mapnrank/app/modules/profile/controllers/profile_controller.dart'
    as _i14;
import 'package:mapnrank/app/repositories/community_repository.dart' as _i10;
import 'package:mapnrank/app/repositories/events_repository.dart' as _i12;
import 'package:mapnrank/app/repositories/sector_repository.dart' as _i6;
import 'package:mapnrank/app/repositories/user_repository.dart' as _i4;
import 'package:mapnrank/app/repositories/zone_repository.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i20;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRx_0<T> extends _i1.SmartFake implements _i2.Rx<T> {
  _FakeRx_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_1 extends _i1.SmartFake
    implements _i3.TextEditingController {
  _FakeTextEditingController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_2<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_3 extends _i1.SmartFake implements _i2.RxBool {
  _FakeRxBool_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxDouble_4 extends _i1.SmartFake implements _i2.RxDouble {
  _FakeRxDouble_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxInt_5 extends _i1.SmartFake implements _i2.RxInt {
  _FakeRxInt_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxString_6 extends _i1.SmartFake implements _i2.RxString {
  _FakeRxString_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeScrollController_7 extends _i1.SmartFake
    implements _i3.ScrollController {
  _FakeScrollController_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserRepository_8 extends _i1.SmartFake
    implements _i4.UserRepository {
  _FakeUserRepository_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeZoneRepository_9 extends _i1.SmartFake
    implements _i5.ZoneRepository {
  _FakeZoneRepository_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSectorRepository_10 extends _i1.SmartFake
    implements _i6.SectorRepository {
  _FakeSectorRepository_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImagePicker_11 extends _i1.SmartFake implements _i7.ImagePicker {
  _FakeImagePicker_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_12 extends _i1.SmartFake implements _i8.File {
  _FakeFile_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_13<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGlobalKey_14<T extends _i3.State<_i3.StatefulWidget>>
    extends _i1.SmartFake implements _i3.GlobalKey<T> {
  _FakeGlobalKey_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetStorage_15 extends _i1.SmartFake implements _i9.GetStorage {
  _FakeGetStorage_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_16 extends _i1.SmartFake implements Duration {
  _FakeDuration_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunityRepository_17 extends _i1.SmartFake
    implements _i10.CommunityRepository {
  _FakeCommunityRepository_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePost_18 extends _i1.SmartFake implements _i11.Post {
  _FakePost_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventsRepository_19 extends _i1.SmartFake
    implements _i12.EventsRepository {
  _FakeEventsRepository_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_20 extends _i1.SmartFake implements _i13.Event {
  _FakeEvent_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileController].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileController extends _i1.Mock implements _i14.ProfileController {
  @override
  _i2.Rx<_i15.UserModel> get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeRx_0<_i15.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeRx_0<_i15.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i2.Rx<_i15.UserModel>);

  @override
  set currentUser(_i2.Rx<_i15.UserModel>? _currentUser) => super.noSuchMethod(
        Invocation.setter(
          #currentUser,
          _currentUser,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get firstNameController => (super.noSuchMethod(
        Invocation.getter(#firstNameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#firstNameController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#firstNameController),
        ),
      ) as _i3.TextEditingController);

  @override
  set firstNameController(_i3.TextEditingController? _firstNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #firstNameController,
          _firstNameController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get lastNameController => (super.noSuchMethod(
        Invocation.getter(#lastNameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#lastNameController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#lastNameController),
        ),
      ) as _i3.TextEditingController);

  @override
  set lastNameController(_i3.TextEditingController? _lastNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #lastNameController,
          _lastNameController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get emailController => (super.noSuchMethod(
        Invocation.getter(#emailController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#emailController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#emailController),
        ),
      ) as _i3.TextEditingController);

  @override
  set emailController(_i3.TextEditingController? _emailController) =>
      super.noSuchMethod(
        Invocation.setter(
          #emailController,
          _emailController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get phoneNumberController => (super.noSuchMethod(
        Invocation.getter(#phoneNumberController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#phoneNumberController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#phoneNumberController),
        ),
      ) as _i3.TextEditingController);

  @override
  set phoneNumberController(
          _i3.TextEditingController? _phoneNumberController) =>
      super.noSuchMethod(
        Invocation.setter(
          #phoneNumberController,
          _phoneNumberController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get genderController => (super.noSuchMethod(
        Invocation.getter(#genderController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#genderController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#genderController),
        ),
      ) as _i3.TextEditingController);

  @override
  set genderController(_i3.TextEditingController? _genderController) =>
      super.noSuchMethod(
        Invocation.setter(
          #genderController,
          _genderController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get birthdateController => (super.noSuchMethod(
        Invocation.getter(#birthdateController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#birthdateController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#birthdateController),
        ),
      ) as _i3.TextEditingController);

  @override
  set birthdateController(_i3.TextEditingController? _birthdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #birthdateController,
          _birthdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get feedbackController => (super.noSuchMethod(
        Invocation.getter(#feedbackController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#feedbackController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#feedbackController),
        ),
      ) as _i3.TextEditingController);

  @override
  set feedbackController(_i3.TextEditingController? _feedbackController) =>
      super.noSuchMethod(
        Invocation.setter(
          #feedbackController,
          _feedbackController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get allPosts => (super.noSuchMethod(
        Invocation.getter(#allPosts),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#allPosts),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#allPosts),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set allPosts(_i2.RxList<dynamic>? _allPosts) => super.noSuchMethod(
        Invocation.setter(
          #allPosts,
          _allPosts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<dynamic> get listAllPosts => (super.noSuchMethod(
        Invocation.getter(#listAllPosts),
        returnValue: <dynamic>[],
        returnValueForMissingStub: <dynamic>[],
      ) as List<dynamic>);

  @override
  set listAllPosts(List<dynamic>? _listAllPosts) => super.noSuchMethod(
        Invocation.setter(
          #listAllPosts,
          _listAllPosts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get allEvents => (super.noSuchMethod(
        Invocation.getter(#allEvents),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#allEvents),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#allEvents),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set allEvents(_i2.RxList<dynamic>? _allEvents) => super.noSuchMethod(
        Invocation.setter(
          #allEvents,
          _allEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<dynamic> get listAllEvents => (super.noSuchMethod(
        Invocation.getter(#listAllEvents),
        returnValue: <dynamic>[],
        returnValueForMissingStub: <dynamic>[],
      ) as List<dynamic>);

  @override
  set listAllEvents(List<dynamic>? _listAllEvents) => super.noSuchMethod(
        Invocation.setter(
          #listAllEvents,
          _listAllEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingPosts => (super.noSuchMethod(
        Invocation.getter(#loadingPosts),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingPosts),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingPosts),
        ),
      ) as _i2.RxBool);

  @override
  set loadingPosts(_i2.RxBool? _loadingPosts) => super.noSuchMethod(
        Invocation.setter(
          #loadingPosts,
          _loadingPosts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get likeTapped => (super.noSuchMethod(
        Invocation.getter(#likeTapped),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#likeTapped),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#likeTapped),
        ),
      ) as _i2.RxBool);

  @override
  set likeTapped(_i2.RxBool? _likeTapped) => super.noSuchMethod(
        Invocation.setter(
          #likeTapped,
          _likeTapped,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get selectedPost => (super.noSuchMethod(
        Invocation.getter(#selectedPost),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#selectedPost),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#selectedPost),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set selectedPost(_i2.RxList<dynamic>? _selectedPost) => super.noSuchMethod(
        Invocation.setter(
          #selectedPost,
          _selectedPost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get unlikedPost => (super.noSuchMethod(
        Invocation.getter(#unlikedPost),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#unlikedPost),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#unlikedPost),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set unlikedPost(_i2.RxList<dynamic>? _unlikedPost) => super.noSuchMethod(
        Invocation.setter(
          #unlikedPost,
          _unlikedPost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sharedPost => (super.noSuchMethod(
        Invocation.getter(#sharedPost),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sharedPost),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sharedPost),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sharedPost(_i2.RxList<dynamic>? _sharedPost) => super.noSuchMethod(
        Invocation.setter(
          #sharedPost,
          _sharedPost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxDouble get postSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#postSelectedIndex),
        returnValue: _FakeRxDouble_4(
          this,
          Invocation.getter(#postSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxDouble_4(
          this,
          Invocation.getter(#postSelectedIndex),
        ),
      ) as _i2.RxDouble);

  @override
  set postSelectedIndex(_i2.RxDouble? _postSelectedIndex) => super.noSuchMethod(
        Invocation.setter(
          #postSelectedIndex,
          _postSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get postFollowedIndex => (super.noSuchMethod(
        Invocation.getter(#postFollowedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#postFollowedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#postFollowedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set postFollowedIndex(_i2.RxInt? _postFollowedIndex) => super.noSuchMethod(
        Invocation.setter(
          #postFollowedIndex,
          _postFollowedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get postSharedIndex => (super.noSuchMethod(
        Invocation.getter(#postSharedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#postSharedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#postSharedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set postSharedIndex(_i2.RxInt? _postSharedIndex) => super.noSuchMethod(
        Invocation.setter(
          #postSharedIndex,
          _postSharedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set likeCount(_i2.RxInt? _likeCount) => super.noSuchMethod(
        Invocation.setter(
          #likeCount,
          _likeCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set shareCount(_i2.RxInt? _shareCount) => super.noSuchMethod(
        Invocation.setter(
          #shareCount,
          _shareCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set commentCount(_i2.RxInt? _commentCount) => super.noSuchMethod(
        Invocation.setter(
          #commentCount,
          _commentCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get comment => (super.noSuchMethod(
        Invocation.getter(#comment),
        returnValue: _FakeRxString_6(
          this,
          Invocation.getter(#comment),
        ),
        returnValueForMissingStub: _FakeRxString_6(
          this,
          Invocation.getter(#comment),
        ),
      ) as _i2.RxString);

  @override
  set comment(_i2.RxString? _comment) => super.noSuchMethod(
        Invocation.setter(
          #comment,
          _comment,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get sendComment => (super.noSuchMethod(
        Invocation.getter(#sendComment),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#sendComment),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#sendComment),
        ),
      ) as _i2.RxBool);

  @override
  set sendComment(_i2.RxBool? _sendComment) => super.noSuchMethod(
        Invocation.setter(
          #sendComment,
          _sendComment,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get commentList => (super.noSuchMethod(
        Invocation.getter(#commentList),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#commentList),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#commentList),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set commentList(_i2.RxList<dynamic>? _commentList) => super.noSuchMethod(
        Invocation.setter(
          #commentList,
          _commentList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Rx<_i11.Post> get postDetails => (super.noSuchMethod(
        Invocation.getter(#postDetails),
        returnValue: _FakeRx_0<_i11.Post>(
          this,
          Invocation.getter(#postDetails),
        ),
        returnValueForMissingStub: _FakeRx_0<_i11.Post>(
          this,
          Invocation.getter(#postDetails),
        ),
      ) as _i2.Rx<_i11.Post>);

  @override
  set postDetails(_i2.Rx<_i11.Post>? _postDetails) => super.noSuchMethod(
        Invocation.setter(
          #postDetails,
          _postDetails,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ScrollController get scrollbarController => (super.noSuchMethod(
        Invocation.getter(#scrollbarController),
        returnValue: _FakeScrollController_7(
          this,
          Invocation.getter(#scrollbarController),
        ),
        returnValueForMissingStub: _FakeScrollController_7(
          this,
          Invocation.getter(#scrollbarController),
        ),
      ) as _i3.ScrollController);

  @override
  set scrollbarController(_i3.ScrollController? _scrollbarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #scrollbarController,
          _scrollbarController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get rating => (super.noSuchMethod(
        Invocation.getter(#rating),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#rating),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#rating),
        ),
      ) as _i2.RxInt);

  @override
  set rating(_i2.RxInt? _rating) => super.noSuchMethod(
        Invocation.setter(
          #rating,
          _rating,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i4.UserRepository);

  @override
  set userRepository(_i4.UserRepository? _userRepository) => super.noSuchMethod(
        Invocation.setter(
          #userRepository,
          _userRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.ZoneRepository get zoneRepository => (super.noSuchMethod(
        Invocation.getter(#zoneRepository),
        returnValue: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
        returnValueForMissingStub: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
      ) as _i5.ZoneRepository);

  @override
  set zoneRepository(_i5.ZoneRepository? _zoneRepository) => super.noSuchMethod(
        Invocation.setter(
          #zoneRepository,
          _zoneRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.SectorRepository get sectorRepository => (super.noSuchMethod(
        Invocation.getter(#sectorRepository),
        returnValue: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
        returnValueForMissingStub: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
      ) as _i6.SectorRepository);

  @override
  set sectorRepository(_i6.SectorRepository? _sectorRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #sectorRepository,
          _sectorRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get updateUserInfo => (super.noSuchMethod(
        Invocation.getter(#updateUserInfo),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#updateUserInfo),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#updateUserInfo),
        ),
      ) as _i2.RxBool);

  @override
  set updateUserInfo(_i2.RxBool? _updateUserInfo) => super.noSuchMethod(
        Invocation.setter(
          #updateUserInfo,
          _updateUserInfo,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.ImagePicker get picker => (super.noSuchMethod(
        Invocation.getter(#picker),
        returnValue: _FakeImagePicker_11(
          this,
          Invocation.getter(#picker),
        ),
        returnValueForMissingStub: _FakeImagePicker_11(
          this,
          Invocation.getter(#picker),
        ),
      ) as _i7.ImagePicker);

  @override
  set picker(_i7.ImagePicker? _picker) => super.noSuchMethod(
        Invocation.setter(
          #picker,
          _picker,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Rx<_i8.File> get profileImage => (super.noSuchMethod(
        Invocation.getter(#profileImage),
        returnValue: _FakeRx_0<_i8.File>(
          this,
          Invocation.getter(#profileImage),
        ),
        returnValueForMissingStub: _FakeRx_0<_i8.File>(
          this,
          Invocation.getter(#profileImage),
        ),
      ) as _i2.Rx<_i8.File>);

  @override
  set profileImage(_i2.Rx<_i8.File>? _profileImage) => super.noSuchMethod(
        Invocation.setter(
          #profileImage,
          _profileImage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadProfileImage => (super.noSuchMethod(
        Invocation.getter(#loadProfileImage),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadProfileImage),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadProfileImage),
        ),
      ) as _i2.RxBool);

  @override
  _i8.File get feedbackImage => (super.noSuchMethod(
        Invocation.getter(#feedbackImage),
        returnValue: _FakeFile_12(
          this,
          Invocation.getter(#feedbackImage),
        ),
        returnValueForMissingStub: _FakeFile_12(
          this,
          Invocation.getter(#feedbackImage),
        ),
      ) as _i8.File);

  @override
  set feedbackImage(_i8.File? _feedbackImage) => super.noSuchMethod(
        Invocation.setter(
          #feedbackImage,
          _feedbackImage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadFeedbackImage => (super.noSuchMethod(
        Invocation.getter(#loadFeedbackImage),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadFeedbackImage),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadFeedbackImage),
        ),
      ) as _i2.RxBool);

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<dynamic> refreshProfile({bool? showMessage = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshProfile,
          [],
          {#showMessage: showMessage},
        ),
        returnValue: _i16.Future<dynamic>.value(),
        returnValueForMissingStub: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);

  @override
  dynamic initializeMyPostDetails(_i11.Post? post) => super.noSuchMethod(
        Invocation.method(
          #initializeMyPostDetails,
          [post],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic profileImagePicker(String? source) => super.noSuchMethod(
        Invocation.method(
          #profileImagePicker,
          [source],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic feedbackImagePicker(String? source) => super.noSuchMethod(
        Invocation.method(
          #feedbackImagePicker,
          [source],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void launchWhatsApp(String? message) => super.noSuchMethod(
        Invocation.method(
          #launchWhatsApp,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListener(_i17.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i17.Disposer);

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i18.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListenerId(
    Object? key,
    _i17.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i17.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthController extends _i1.Mock implements _i19.AuthController {
  @override
  _i2.Rx<_i15.UserModel> get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeRx_0<_i15.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeRx_0<_i15.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i2.Rx<_i15.UserModel>);

  @override
  set currentUser(_i2.Rx<_i15.UserModel>? _currentUser) => super.noSuchMethod(
        Invocation.setter(
          #currentUser,
          _currentUser,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.GlobalKey<_i3.FormState> get loginFormKey => (super.noSuchMethod(
        Invocation.getter(#loginFormKey),
        returnValue: _FakeGlobalKey_14<_i3.FormState>(
          this,
          Invocation.getter(#loginFormKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_14<_i3.FormState>(
          this,
          Invocation.getter(#loginFormKey),
        ),
      ) as _i3.GlobalKey<_i3.FormState>);

  @override
  set loginFormKey(_i3.GlobalKey<_i3.FormState>? _loginFormKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #loginFormKey,
          _loginFormKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.GlobalKey<_i3.FormState> get registerFormKey => (super.noSuchMethod(
        Invocation.getter(#registerFormKey),
        returnValue: _FakeGlobalKey_14<_i3.FormState>(
          this,
          Invocation.getter(#registerFormKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_14<_i3.FormState>(
          this,
          Invocation.getter(#registerFormKey),
        ),
      ) as _i3.GlobalKey<_i3.FormState>);

  @override
  set registerFormKey(_i3.GlobalKey<_i3.FormState>? _registerFormKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #registerFormKey,
          _registerFormKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.GlobalKey<_i3.FormState> get institutionalUserFormKey =>
      (super.noSuchMethod(
        Invocation.getter(#institutionalUserFormKey),
        returnValue: _FakeGlobalKey_14<_i3.FormState>(
          this,
          Invocation.getter(#institutionalUserFormKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_14<_i3.FormState>(
          this,
          Invocation.getter(#institutionalUserFormKey),
        ),
      ) as _i3.GlobalKey<_i3.FormState>);

  @override
  set institutionalUserFormKey(
          _i3.GlobalKey<_i3.FormState>? _institutionalUserFormKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #institutionalUserFormKey,
          _institutionalUserFormKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get hidePassword => (super.noSuchMethod(
        Invocation.getter(#hidePassword),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#hidePassword),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#hidePassword),
        ),
      ) as _i2.RxBool);

  @override
  _i2.RxBool get loading => (super.noSuchMethod(
        Invocation.getter(#loading),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loading),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loading),
        ),
      ) as _i2.RxBool);

  @override
  set loading(_i2.RxBool? _loading) => super.noSuchMethod(
        Invocation.setter(
          #loading,
          _loading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get registerNext => (super.noSuchMethod(
        Invocation.getter(#registerNext),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#registerNext),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#registerNext),
        ),
      ) as _i2.RxBool);

  @override
  set registerNext(_i2.RxBool? _registerNext) => super.noSuchMethod(
        Invocation.setter(
          #registerNext,
          _registerNext,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get institutionalUserNext => (super.noSuchMethod(
        Invocation.getter(#institutionalUserNext),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#institutionalUserNext),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#institutionalUserNext),
        ),
      ) as _i2.RxBool);

  @override
  set institutionalUserNext(_i2.RxBool? _institutionalUserNext) =>
      super.noSuchMethod(
        Invocation.setter(
          #institutionalUserNext,
          _institutionalUserNext,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get registerNextStep1 => (super.noSuchMethod(
        Invocation.getter(#registerNextStep1),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#registerNextStep1),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#registerNextStep1),
        ),
      ) as _i2.RxBool);

  @override
  set registerNextStep1(_i2.RxBool? _registerNextStep1) => super.noSuchMethod(
        Invocation.setter(
          #registerNextStep1,
          _registerNextStep1,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.ImagePicker get picker => (super.noSuchMethod(
        Invocation.getter(#picker),
        returnValue: _FakeImagePicker_11(
          this,
          Invocation.getter(#picker),
        ),
        returnValueForMissingStub: _FakeImagePicker_11(
          this,
          Invocation.getter(#picker),
        ),
      ) as _i7.ImagePicker);

  @override
  set picker(_i7.ImagePicker? _picker) => super.noSuchMethod(
        Invocation.setter(
          #picker,
          _picker,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.File get profileImage => (super.noSuchMethod(
        Invocation.getter(#profileImage),
        returnValue: _FakeFile_12(
          this,
          Invocation.getter(#profileImage),
        ),
        returnValueForMissingStub: _FakeFile_12(
          this,
          Invocation.getter(#profileImage),
        ),
      ) as _i8.File);

  @override
  set profileImage(_i8.File? _profileImage) => super.noSuchMethod(
        Invocation.setter(
          #profileImage,
          _profileImage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadProfileImage => (super.noSuchMethod(
        Invocation.getter(#loadProfileImage),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadProfileImage),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadProfileImage),
        ),
      ) as _i2.RxBool);

  @override
  _i2.RxString get birthDate => (super.noSuchMethod(
        Invocation.getter(#birthDate),
        returnValue: _FakeRxString_6(
          this,
          Invocation.getter(#birthDate),
        ),
        returnValueForMissingStub: _FakeRxString_6(
          this,
          Invocation.getter(#birthDate),
        ),
      ) as _i2.RxString);

  @override
  set birthDate(_i2.RxString? _birthDate) => super.noSuchMethod(
        Invocation.setter(
          #birthDate,
          _birthDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get birthDateDisplay => (super.noSuchMethod(
        Invocation.getter(#birthDateDisplay),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#birthDateDisplay),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#birthDateDisplay),
        ),
      ) as _i3.TextEditingController);

  @override
  set birthDateDisplay(_i3.TextEditingController? _birthDateDisplay) =>
      super.noSuchMethod(
        Invocation.setter(
          #birthDateDisplay,
          _birthDateDisplay,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get firstNameController => (super.noSuchMethod(
        Invocation.getter(#firstNameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#firstNameController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#firstNameController),
        ),
      ) as _i3.TextEditingController);

  @override
  set firstNameController(_i3.TextEditingController? _firstNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #firstNameController,
          _firstNameController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get lastNameController => (super.noSuchMethod(
        Invocation.getter(#lastNameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#lastNameController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#lastNameController),
        ),
      ) as _i3.TextEditingController);

  @override
  set lastNameController(_i3.TextEditingController? _lastNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #lastNameController,
          _lastNameController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get emailController => (super.noSuchMethod(
        Invocation.getter(#emailController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#emailController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#emailController),
        ),
      ) as _i3.TextEditingController);

  @override
  set emailController(_i3.TextEditingController? _emailController) =>
      super.noSuchMethod(
        Invocation.setter(
          #emailController,
          _emailController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get phoneController => (super.noSuchMethod(
        Invocation.getter(#phoneController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#phoneController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#phoneController),
        ),
      ) as _i3.TextEditingController);

  @override
  set phoneController(_i3.TextEditingController? _phoneController) =>
      super.noSuchMethod(
        Invocation.setter(
          #phoneController,
          _phoneController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get institutionNameController =>
      (super.noSuchMethod(
        Invocation.getter(#institutionNameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#institutionNameController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#institutionNameController),
        ),
      ) as _i3.TextEditingController);

  @override
  set institutionNameController(
          _i3.TextEditingController? _institutionNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #institutionNameController,
          _institutionNameController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get institutionEmailController =>
      (super.noSuchMethod(
        Invocation.getter(#institutionEmailController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#institutionEmailController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#institutionEmailController),
        ),
      ) as _i3.TextEditingController);

  @override
  set institutionEmailController(
          _i3.TextEditingController? _institutionEmailController) =>
      super.noSuchMethod(
        Invocation.setter(
          #institutionEmailController,
          _institutionEmailController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get institutionPhoneController =>
      (super.noSuchMethod(
        Invocation.getter(#institutionPhoneController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#institutionPhoneController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#institutionPhoneController),
        ),
      ) as _i3.TextEditingController);

  @override
  set institutionPhoneController(
          _i3.TextEditingController? _institutionPhoneController) =>
      super.noSuchMethod(
        Invocation.setter(
          #institutionPhoneController,
          _institutionPhoneController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get institutionDescriptionController =>
      (super.noSuchMethod(
        Invocation.getter(#institutionDescriptionController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#institutionDescriptionController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#institutionDescriptionController),
        ),
      ) as _i3.TextEditingController);

  @override
  set institutionDescriptionController(
          _i3.TextEditingController? _institutionDescriptionController) =>
      super.noSuchMethod(
        Invocation.setter(
          #institutionDescriptionController,
          _institutionDescriptionController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get emailFocus => (super.noSuchMethod(
        Invocation.getter(#emailFocus),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set emailFocus(bool? _emailFocus) => super.noSuchMethod(
        Invocation.setter(
          #emailFocus,
          _emailFocus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get phoneFocus => (super.noSuchMethod(
        Invocation.getter(#phoneFocus),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set phoneFocus(bool? _phoneFocus) => super.noSuchMethod(
        Invocation.setter(
          #phoneFocus,
          _phoneFocus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingRegions => (super.noSuchMethod(
        Invocation.getter(#loadingRegions),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingRegions),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingRegions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingRegions(_i2.RxBool? _loadingRegions) => super.noSuchMethod(
        Invocation.setter(
          #loadingRegions,
          _loadingRegions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get regions => (super.noSuchMethod(
        Invocation.getter(#regions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set regions(_i2.RxList<dynamic>? _regions) => super.noSuchMethod(
        Invocation.setter(
          #regions,
          _regions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get regionSelected => (super.noSuchMethod(
        Invocation.getter(#regionSelected),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#regionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#regionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set regionSelected(_i2.RxBool? _regionSelected) => super.noSuchMethod(
        Invocation.setter(
          #regionSelected,
          _regionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get regionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#regionSelectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#regionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#regionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set regionSelectedIndex(_i2.RxInt? _regionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #regionSelectedIndex,
          _regionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listRegions => (super.noSuchMethod(
        Invocation.getter(#listRegions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listRegions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listRegions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listRegions(_i2.RxList<dynamic>? _listRegions) => super.noSuchMethod(
        Invocation.setter(
          #listRegions,
          _listRegions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get regionsSet => (super.noSuchMethod(
        Invocation.getter(#regionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set regionsSet(Map<dynamic, dynamic>? _regionsSet) => super.noSuchMethod(
        Invocation.setter(
          #regionsSet,
          _regionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get regionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#regionSelectedValue),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set regionSelectedValue(_i2.RxList<dynamic>? _regionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #regionSelectedValue,
          _regionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingDivisions => (super.noSuchMethod(
        Invocation.getter(#loadingDivisions),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingDivisions),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingDivisions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingDivisions(_i2.RxBool? _loadingDivisions) => super.noSuchMethod(
        Invocation.setter(
          #loadingDivisions,
          _loadingDivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get divisions => (super.noSuchMethod(
        Invocation.getter(#divisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set divisions(_i2.RxList<dynamic>? _divisions) => super.noSuchMethod(
        Invocation.setter(
          #divisions,
          _divisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get divisionSelected => (super.noSuchMethod(
        Invocation.getter(#divisionSelected),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#divisionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#divisionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set divisionSelected(_i2.RxBool? _divisionSelected) => super.noSuchMethod(
        Invocation.setter(
          #divisionSelected,
          _divisionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get divisionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#divisionSelectedValue),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set divisionSelectedValue(_i2.RxList<dynamic>? _divisionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #divisionSelectedValue,
          _divisionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get divisionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#divisionSelectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#divisionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#divisionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set divisionSelectedIndex(_i2.RxInt? _divisionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #divisionSelectedIndex,
          _divisionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listDivisions => (super.noSuchMethod(
        Invocation.getter(#listDivisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listDivisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listDivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listDivisions(_i2.RxList<dynamic>? _listDivisions) => super.noSuchMethod(
        Invocation.setter(
          #listDivisions,
          _listDivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get divisionsSet => (super.noSuchMethod(
        Invocation.getter(#divisionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set divisionsSet(Map<dynamic, dynamic>? _divisionsSet) => super.noSuchMethod(
        Invocation.setter(
          #divisionsSet,
          _divisionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingSubdivisions => (super.noSuchMethod(
        Invocation.getter(#loadingSubdivisions),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSubdivisions),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSubdivisions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingSubdivisions(_i2.RxBool? _loadingSubdivisions) =>
      super.noSuchMethod(
        Invocation.setter(
          #loadingSubdivisions,
          _loadingSubdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get subdivisions => (super.noSuchMethod(
        Invocation.getter(#subdivisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set subdivisions(_i2.RxList<dynamic>? _subdivisions) => super.noSuchMethod(
        Invocation.setter(
          #subdivisions,
          _subdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get subdivisionSelected => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelected),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#subdivisionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#subdivisionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set subdivisionSelected(_i2.RxBool? _subdivisionSelected) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelected,
          _subdivisionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get subdivisionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelectedValue),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set subdivisionSelectedValue(
          _i2.RxList<dynamic>? _subdivisionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelectedValue,
          _subdivisionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get subdivisionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#subdivisionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#subdivisionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set subdivisionSelectedIndex(_i2.RxInt? _subdivisionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelectedIndex,
          _subdivisionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listSubdivisions => (super.noSuchMethod(
        Invocation.getter(#listSubdivisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSubdivisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSubdivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listSubdivisions(_i2.RxList<dynamic>? _listSubdivisions) =>
      super.noSuchMethod(
        Invocation.setter(
          #listSubdivisions,
          _listSubdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get subdivisionsSet => (super.noSuchMethod(
        Invocation.getter(#subdivisionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set subdivisionsSet(Map<dynamic, dynamic>? _subdivisionsSet) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionsSet,
          _subdivisionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingSectors => (super.noSuchMethod(
        Invocation.getter(#loadingSectors),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSectors),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSectors),
        ),
      ) as _i2.RxBool);

  @override
  set loadingSectors(_i2.RxBool? _loadingSectors) => super.noSuchMethod(
        Invocation.setter(
          #loadingSectors,
          _loadingSectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loginOrRegister => (super.noSuchMethod(
        Invocation.getter(#loginOrRegister),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loginOrRegister),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loginOrRegister),
        ),
      ) as _i2.RxBool);

  @override
  set loginOrRegister(_i2.RxBool? _loginOrRegister) => super.noSuchMethod(
        Invocation.setter(
          #loginOrRegister,
          _loginOrRegister,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sectors => (super.noSuchMethod(
        Invocation.getter(#sectors),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectors),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectors),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sectors(_i2.RxList<dynamic>? _sectors) => super.noSuchMethod(
        Invocation.setter(
          #sectors,
          _sectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sectorsSelected => (super.noSuchMethod(
        Invocation.getter(#sectorsSelected),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectorsSelected),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectorsSelected),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sectorsSelected(_i2.RxList<dynamic>? _sectorsSelected) =>
      super.noSuchMethod(
        Invocation.setter(
          #sectorsSelected,
          _sectorsSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#selectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#selectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set selectedIndex(_i2.RxInt? _selectedIndex) => super.noSuchMethod(
        Invocation.setter(
          #selectedIndex,
          _selectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listSectors => (super.noSuchMethod(
        Invocation.getter(#listSectors),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSectors),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSectors),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listSectors(_i2.RxList<dynamic>? _listSectors) => super.noSuchMethod(
        Invocation.setter(
          #listSectors,
          _listSectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get sectorsSet => (super.noSuchMethod(
        Invocation.getter(#sectorsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set sectorsSet(Map<dynamic, dynamic>? _sectorsSet) => super.noSuchMethod(
        Invocation.setter(
          #sectorsSet,
          _sectorsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseSector => (super.noSuchMethod(
        Invocation.getter(#chooseSector),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseSector),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseSector),
        ),
      ) as _i2.RxBool);

  @override
  set chooseSector(_i2.RxBool? _chooseSector) => super.noSuchMethod(
        Invocation.setter(
          #chooseSector,
          _chooseSector,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseRegion => (super.noSuchMethod(
        Invocation.getter(#chooseRegion),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseRegion),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseRegion),
        ),
      ) as _i2.RxBool);

  @override
  set chooseRegion(_i2.RxBool? _chooseRegion) => super.noSuchMethod(
        Invocation.setter(
          #chooseRegion,
          _chooseRegion,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseDivision => (super.noSuchMethod(
        Invocation.getter(#chooseDivision),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseDivision),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseDivision),
        ),
      ) as _i2.RxBool);

  @override
  set chooseDivision(_i2.RxBool? _chooseDivision) => super.noSuchMethod(
        Invocation.setter(
          #chooseDivision,
          _chooseDivision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseSubdivision => (super.noSuchMethod(
        Invocation.getter(#chooseSubdivision),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseSubdivision),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseSubdivision),
        ),
      ) as _i2.RxBool);

  @override
  set chooseSubdivision(_i2.RxBool? _chooseSubdivision) => super.noSuchMethod(
        Invocation.setter(
          #chooseSubdivision,
          _chooseSubdivision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loginWithPhoneNumber => (super.noSuchMethod(
        Invocation.getter(#loginWithPhoneNumber),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loginWithPhoneNumber),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loginWithPhoneNumber),
        ),
      ) as _i2.RxBool);

  @override
  set loginWithPhoneNumber(_i2.RxBool? _loginWithPhoneNumber) =>
      super.noSuchMethod(
        Invocation.setter(
          #loginWithPhoneNumber,
          _loginWithPhoneNumber,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set phoneNumber(dynamic _phoneNumber) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumber,
          _phoneNumber,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get confirmPassword => (super.noSuchMethod(
        Invocation.getter(#confirmPassword),
        returnValue: _i20.dummyValue<String>(
          this,
          Invocation.getter(#confirmPassword),
        ),
        returnValueForMissingStub: _i20.dummyValue<String>(
          this,
          Invocation.getter(#confirmPassword),
        ),
      ) as String);

  @override
  set confirmPassword(String? _confirmPassword) => super.noSuchMethod(
        Invocation.setter(
          #confirmPassword,
          _confirmPassword,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get isConfidentialityChecked => (super.noSuchMethod(
        Invocation.getter(#isConfidentialityChecked),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#isConfidentialityChecked),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#isConfidentialityChecked),
        ),
      ) as _i2.RxBool);

  @override
  set isConfidentialityChecked(_i2.RxBool? _isConfidentialityChecked) =>
      super.noSuchMethod(
        Invocation.setter(
          #isConfidentialityChecked,
          _isConfidentialityChecked,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i4.UserRepository);

  @override
  set userRepository(_i4.UserRepository? _userRepository) => super.noSuchMethod(
        Invocation.setter(
          #userRepository,
          _userRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.ZoneRepository get zoneRepository => (super.noSuchMethod(
        Invocation.getter(#zoneRepository),
        returnValue: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
        returnValueForMissingStub: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
      ) as _i5.ZoneRepository);

  @override
  set zoneRepository(_i5.ZoneRepository? _zoneRepository) => super.noSuchMethod(
        Invocation.setter(
          #zoneRepository,
          _zoneRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.SectorRepository get sectorRepository => (super.noSuchMethod(
        Invocation.getter(#sectorRepository),
        returnValue: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
        returnValueForMissingStub: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
      ) as _i6.SectorRepository);

  @override
  set sectorRepository(_i6.SectorRepository? _sectorRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #sectorRepository,
          _sectorRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get selectedGender => (super.noSuchMethod(
        Invocation.getter(#selectedGender),
        returnValue: _FakeRxString_6(
          this,
          Invocation.getter(#selectedGender),
        ),
        returnValueForMissingStub: _FakeRxString_6(
          this,
          Invocation.getter(#selectedGender),
        ),
      ) as _i2.RxString);

  @override
  set selectedGender(_i2.RxString? _selectedGender) => super.noSuchMethod(
        Invocation.setter(
          #selectedGender,
          _selectedGender,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get selectedCoverageZone => (super.noSuchMethod(
        Invocation.getter(#selectedCoverageZone),
        returnValue: _FakeRxString_6(
          this,
          Invocation.getter(#selectedCoverageZone),
        ),
        returnValueForMissingStub: _FakeRxString_6(
          this,
          Invocation.getter(#selectedCoverageZone),
        ),
      ) as _i2.RxString);

  @override
  set selectedCoverageZone(_i2.RxString? _selectedCoverageZone) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedCoverageZone,
          _selectedCoverageZone,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<String> get genderList => (super.noSuchMethod(
        Invocation.getter(#genderList),
        returnValue: _FakeRxList_2<String>(
          this,
          Invocation.getter(#genderList),
        ),
        returnValueForMissingStub: _FakeRxList_2<String>(
          this,
          Invocation.getter(#genderList),
        ),
      ) as _i2.RxList<String>);

  @override
  set genderList(_i2.RxList<String>? _genderList) => super.noSuchMethod(
        Invocation.setter(
          #genderList,
          _genderList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<String> get institutionZoneCoverageList => (super.noSuchMethod(
        Invocation.getter(#institutionZoneCoverageList),
        returnValue: _FakeRxList_2<String>(
          this,
          Invocation.getter(#institutionZoneCoverageList),
        ),
        returnValueForMissingStub: _FakeRxList_2<String>(
          this,
          Invocation.getter(#institutionZoneCoverageList),
        ),
      ) as _i2.RxList<String>);

  @override
  set institutionZoneCoverageList(
          _i2.RxList<String>? _institutionZoneCoverageList) =>
      super.noSuchMethod(
        Invocation.setter(
          #institutionZoneCoverageList,
          _institutionZoneCoverageList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get selectedLanguage => (super.noSuchMethod(
        Invocation.getter(#selectedLanguage),
        returnValue: _FakeRxString_6(
          this,
          Invocation.getter(#selectedLanguage),
        ),
        returnValueForMissingStub: _FakeRxString_6(
          this,
          Invocation.getter(#selectedLanguage),
        ),
      ) as _i2.RxString);

  @override
  set selectedLanguage(_i2.RxString? _selectedLanguage) => super.noSuchMethod(
        Invocation.setter(
          #selectedLanguage,
          _selectedLanguage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<String> get languageList => (super.noSuchMethod(
        Invocation.getter(#languageList),
        returnValue: _FakeRxList_2<String>(
          this,
          Invocation.getter(#languageList),
        ),
        returnValueForMissingStub: _FakeRxList_2<String>(
          this,
          Invocation.getter(#languageList),
        ),
      ) as _i2.RxList<String>);

  @override
  set languageList(_i2.RxList<String>? _languageList) => super.noSuchMethod(
        Invocation.setter(
          #languageList,
          _languageList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.GetStorage get box => (super.noSuchMethod(
        Invocation.getter(#box),
        returnValue: _FakeGetStorage_15(
          this,
          Invocation.getter(#box),
        ),
        returnValueForMissingStub: _FakeGetStorage_15(
          this,
          Invocation.getter(#box),
        ),
      ) as _i9.GetStorage);

  @override
  set box(_i9.GetStorage? _box) => super.noSuchMethod(
        Invocation.setter(
          #box,
          _box,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxDouble get progress => (super.noSuchMethod(
        Invocation.getter(#progress),
        returnValue: _FakeRxDouble_4(
          this,
          Invocation.getter(#progress),
        ),
        returnValueForMissingStub: _FakeRxDouble_4(
          this,
          Invocation.getter(#progress),
        ),
      ) as _i2.RxDouble);

  @override
  set progress(_i2.RxDouble? _progress) => super.noSuchMethod(
        Invocation.setter(
          #progress,
          _progress,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Duration get duration => (super.noSuchMethod(
        Invocation.getter(#duration),
        returnValue: _FakeDuration_16(
          this,
          Invocation.getter(#duration),
        ),
        returnValueForMissingStub: _FakeDuration_16(
          this,
          Invocation.getter(#duration),
        ),
      ) as Duration);

  @override
  set duration(Duration? _duration) => super.noSuchMethod(
        Invocation.setter(
          #duration,
          _duration,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void startProgress() => super.noSuchMethod(
        Invocation.method(
          #startProgress,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchRegions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchRegions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllDivisions(int? index) => super.noSuchMethod(
        Invocation.method(
          #getAllDivisions,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchDivisions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchDivisions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllSubdivisions(int? index) => super.noSuchMethod(
        Invocation.method(
          #getAllSubdivisions,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchSubdivisions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchSubdivisions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchSectors(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchSectors,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic profileImagePicker(String? source) => super.noSuchMethod(
        Invocation.method(
          #profileImagePicker,
          [source],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic resetPassword(String? email) => super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [email],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListener(_i17.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i17.Disposer);

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i18.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListenerId(
    Object? key,
    _i17.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i17.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CommunityController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommunityController extends _i1.Mock
    implements _i21.CommunityController {
  @override
  _i2.Rx<_i15.UserModel> get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeRx_0<_i15.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeRx_0<_i15.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i2.Rx<_i15.UserModel>);

  @override
  _i2.RxBool get floatingActionButtonTapped => (super.noSuchMethod(
        Invocation.getter(#floatingActionButtonTapped),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#floatingActionButtonTapped),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#floatingActionButtonTapped),
        ),
      ) as _i2.RxBool);

  @override
  set floatingActionButtonTapped(_i2.RxBool? _floatingActionButtonTapped) =>
      super.noSuchMethod(
        Invocation.setter(
          #floatingActionButtonTapped,
          _floatingActionButtonTapped,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingAPost => (super.noSuchMethod(
        Invocation.getter(#loadingAPost),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingAPost),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingAPost),
        ),
      ) as _i2.RxBool);

  @override
  set loadingAPost(_i2.RxBool? _loadingAPost) => super.noSuchMethod(
        Invocation.setter(
          #loadingAPost,
          _loadingAPost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.CommunityRepository get communityRepository => (super.noSuchMethod(
        Invocation.getter(#communityRepository),
        returnValue: _FakeCommunityRepository_17(
          this,
          Invocation.getter(#communityRepository),
        ),
        returnValueForMissingStub: _FakeCommunityRepository_17(
          this,
          Invocation.getter(#communityRepository),
        ),
      ) as _i10.CommunityRepository);

  @override
  set communityRepository(_i10.CommunityRepository? _communityRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #communityRepository,
          _communityRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get allPosts => (super.noSuchMethod(
        Invocation.getter(#allPosts),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#allPosts),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#allPosts),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set allPosts(_i2.RxList<dynamic>? _allPosts) => super.noSuchMethod(
        Invocation.setter(
          #allPosts,
          _allPosts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<dynamic> get listAllPosts => (super.noSuchMethod(
        Invocation.getter(#listAllPosts),
        returnValue: <dynamic>[],
        returnValueForMissingStub: <dynamic>[],
      ) as List<dynamic>);

  @override
  set listAllPosts(List<dynamic>? _listAllPosts) => super.noSuchMethod(
        Invocation.setter(
          #listAllPosts,
          _listAllPosts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingPosts => (super.noSuchMethod(
        Invocation.getter(#loadingPosts),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingPosts),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingPosts),
        ),
      ) as _i2.RxBool);

  @override
  set loadingPosts(_i2.RxBool? _loadingPosts) => super.noSuchMethod(
        Invocation.setter(
          #loadingPosts,
          _loadingPosts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get createPosts => (super.noSuchMethod(
        Invocation.getter(#createPosts),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#createPosts),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#createPosts),
        ),
      ) as _i2.RxBool);

  @override
  set createPosts(_i2.RxBool? _createPosts) => super.noSuchMethod(
        Invocation.setter(
          #createPosts,
          _createPosts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get updatePosts => (super.noSuchMethod(
        Invocation.getter(#updatePosts),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#updatePosts),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#updatePosts),
        ),
      ) as _i2.RxBool);

  @override
  set updatePosts(_i2.RxBool? _updatePosts) => super.noSuchMethod(
        Invocation.setter(
          #updatePosts,
          _updatePosts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get createUpdatePosts => (super.noSuchMethod(
        Invocation.getter(#createUpdatePosts),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#createUpdatePosts),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#createUpdatePosts),
        ),
      ) as _i2.RxBool);

  @override
  set createUpdatePosts(_i2.RxBool? _createUpdatePosts) => super.noSuchMethod(
        Invocation.setter(
          #createUpdatePosts,
          _createUpdatePosts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get searchField => (super.noSuchMethod(
        Invocation.getter(#searchField),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#searchField),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#searchField),
        ),
      ) as _i2.RxBool);

  @override
  set searchField(_i2.RxBool? _searchField) => super.noSuchMethod(
        Invocation.setter(
          #searchField,
          _searchField,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get noFilter => (super.noSuchMethod(
        Invocation.getter(#noFilter),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#noFilter),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#noFilter),
        ),
      ) as _i2.RxBool);

  @override
  set noFilter(_i2.RxBool? _noFilter) => super.noSuchMethod(
        Invocation.setter(
          #noFilter,
          _noFilter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get createPostNotEvent => (super.noSuchMethod(
        Invocation.getter(#createPostNotEvent),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#createPostNotEvent),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#createPostNotEvent),
        ),
      ) as _i2.RxBool);

  @override
  set createPostNotEvent(_i2.RxBool? _createPostNotEvent) => super.noSuchMethod(
        Invocation.setter(
          #createPostNotEvent,
          _createPostNotEvent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Post get post => (super.noSuchMethod(
        Invocation.getter(#post),
        returnValue: _FakePost_18(
          this,
          Invocation.getter(#post),
        ),
        returnValueForMissingStub: _FakePost_18(
          this,
          Invocation.getter(#post),
        ),
      ) as _i11.Post);

  @override
  set post(_i11.Post? _post) => super.noSuchMethod(
        Invocation.setter(
          #post,
          _post,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Rx<_i11.Post> get postDetails => (super.noSuchMethod(
        Invocation.getter(#postDetails),
        returnValue: _FakeRx_0<_i11.Post>(
          this,
          Invocation.getter(#postDetails),
        ),
        returnValueForMissingStub: _FakeRx_0<_i11.Post>(
          this,
          Invocation.getter(#postDetails),
        ),
      ) as _i2.Rx<_i11.Post>);

  @override
  set postDetails(_i2.Rx<_i11.Post>? _postDetails) => super.noSuchMethod(
        Invocation.setter(
          #postDetails,
          _postDetails,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Map<String, dynamic>> get zones => (super.noSuchMethod(
        Invocation.getter(#zones),
        returnValue: <Map<String, dynamic>>[],
        returnValueForMissingStub: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);

  @override
  set zones(List<Map<String, dynamic>>? _zones) => super.noSuchMethod(
        Invocation.setter(
          #zones,
          _zones,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Map<String, dynamic>> get listAllZones => (super.noSuchMethod(
        Invocation.getter(#listAllZones),
        returnValue: <Map<String, dynamic>>[],
        returnValueForMissingStub: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);

  @override
  set listAllZones(List<Map<String, dynamic>>? _listAllZones) =>
      super.noSuchMethod(
        Invocation.setter(
          #listAllZones,
          _listAllZones,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingRegions => (super.noSuchMethod(
        Invocation.getter(#loadingRegions),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingRegions),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingRegions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingRegions(_i2.RxBool? _loadingRegions) => super.noSuchMethod(
        Invocation.setter(
          #loadingRegions,
          _loadingRegions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get regions => (super.noSuchMethod(
        Invocation.getter(#regions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set regions(_i2.RxList<dynamic>? _regions) => super.noSuchMethod(
        Invocation.setter(
          #regions,
          _regions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get regionSelected => (super.noSuchMethod(
        Invocation.getter(#regionSelected),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#regionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#regionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set regionSelected(_i2.RxBool? _regionSelected) => super.noSuchMethod(
        Invocation.setter(
          #regionSelected,
          _regionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get regionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#regionSelectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#regionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#regionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set regionSelectedIndex(_i2.RxInt? _regionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #regionSelectedIndex,
          _regionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listRegions => (super.noSuchMethod(
        Invocation.getter(#listRegions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listRegions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listRegions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listRegions(_i2.RxList<dynamic>? _listRegions) => super.noSuchMethod(
        Invocation.setter(
          #listRegions,
          _listRegions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get regionsSet => (super.noSuchMethod(
        Invocation.getter(#regionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set regionsSet(Map<dynamic, dynamic>? _regionsSet) => super.noSuchMethod(
        Invocation.setter(
          #regionsSet,
          _regionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get regionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#regionSelectedValue),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set regionSelectedValue(_i2.RxList<dynamic>? _regionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #regionSelectedValue,
          _regionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get cancelSearchSubDivision => (super.noSuchMethod(
        Invocation.getter(#cancelSearchSubDivision),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#cancelSearchSubDivision),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#cancelSearchSubDivision),
        ),
      ) as _i2.RxBool);

  @override
  set cancelSearchSubDivision(_i2.RxBool? _cancelSearchSubDivision) =>
      super.noSuchMethod(
        Invocation.setter(
          #cancelSearchSubDivision,
          _cancelSearchSubDivision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingDivisions => (super.noSuchMethod(
        Invocation.getter(#loadingDivisions),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingDivisions),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingDivisions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingDivisions(_i2.RxBool? _loadingDivisions) => super.noSuchMethod(
        Invocation.setter(
          #loadingDivisions,
          _loadingDivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get divisions => (super.noSuchMethod(
        Invocation.getter(#divisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set divisions(_i2.RxList<dynamic>? _divisions) => super.noSuchMethod(
        Invocation.setter(
          #divisions,
          _divisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get divisionSelected => (super.noSuchMethod(
        Invocation.getter(#divisionSelected),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#divisionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#divisionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set divisionSelected(_i2.RxBool? _divisionSelected) => super.noSuchMethod(
        Invocation.setter(
          #divisionSelected,
          _divisionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get divisionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#divisionSelectedValue),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set divisionSelectedValue(_i2.RxList<dynamic>? _divisionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #divisionSelectedValue,
          _divisionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get divisionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#divisionSelectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#divisionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#divisionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set divisionSelectedIndex(_i2.RxInt? _divisionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #divisionSelectedIndex,
          _divisionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listDivisions => (super.noSuchMethod(
        Invocation.getter(#listDivisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listDivisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listDivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listDivisions(_i2.RxList<dynamic>? _listDivisions) => super.noSuchMethod(
        Invocation.setter(
          #listDivisions,
          _listDivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get divisionsSet => (super.noSuchMethod(
        Invocation.getter(#divisionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set divisionsSet(Map<dynamic, dynamic>? _divisionsSet) => super.noSuchMethod(
        Invocation.setter(
          #divisionsSet,
          _divisionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingSubdivisions => (super.noSuchMethod(
        Invocation.getter(#loadingSubdivisions),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSubdivisions),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSubdivisions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingSubdivisions(_i2.RxBool? _loadingSubdivisions) =>
      super.noSuchMethod(
        Invocation.setter(
          #loadingSubdivisions,
          _loadingSubdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get subdivisions => (super.noSuchMethod(
        Invocation.getter(#subdivisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set subdivisions(_i2.RxList<dynamic>? _subdivisions) => super.noSuchMethod(
        Invocation.setter(
          #subdivisions,
          _subdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get subdivisionSelected => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelected),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#subdivisionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#subdivisionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set subdivisionSelected(_i2.RxBool? _subdivisionSelected) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelected,
          _subdivisionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get subdivisionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelectedValue),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set subdivisionSelectedValue(
          _i2.RxList<dynamic>? _subdivisionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelectedValue,
          _subdivisionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get subdivisionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#subdivisionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#subdivisionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set subdivisionSelectedIndex(_i2.RxInt? _subdivisionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelectedIndex,
          _subdivisionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listSubdivisions => (super.noSuchMethod(
        Invocation.getter(#listSubdivisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSubdivisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSubdivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listSubdivisions(_i2.RxList<dynamic>? _listSubdivisions) =>
      super.noSuchMethod(
        Invocation.setter(
          #listSubdivisions,
          _listSubdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get subdivisionsSet => (super.noSuchMethod(
        Invocation.getter(#subdivisionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set subdivisionsSet(Map<dynamic, dynamic>? _subdivisionsSet) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionsSet,
          _subdivisionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingSectors => (super.noSuchMethod(
        Invocation.getter(#loadingSectors),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSectors),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSectors),
        ),
      ) as _i2.RxBool);

  @override
  set loadingSectors(_i2.RxBool? _loadingSectors) => super.noSuchMethod(
        Invocation.setter(
          #loadingSectors,
          _loadingSectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sectors => (super.noSuchMethod(
        Invocation.getter(#sectors),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectors),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectors),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sectors(_i2.RxList<dynamic>? _sectors) => super.noSuchMethod(
        Invocation.setter(
          #sectors,
          _sectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sectorsSelected => (super.noSuchMethod(
        Invocation.getter(#sectorsSelected),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectorsSelected),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectorsSelected),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sectorsSelected(_i2.RxList<dynamic>? _sectorsSelected) =>
      super.noSuchMethod(
        Invocation.setter(
          #sectorsSelected,
          _sectorsSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get postFollowed => (super.noSuchMethod(
        Invocation.getter(#postFollowed),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#postFollowed),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#postFollowed),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set postFollowed(_i2.RxList<dynamic>? _postFollowed) => super.noSuchMethod(
        Invocation.setter(
          #postFollowed,
          _postFollowed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get postUnFollowed => (super.noSuchMethod(
        Invocation.getter(#postUnFollowed),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#postUnFollowed),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#postUnFollowed),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set postUnFollowed(_i2.RxList<dynamic>? _postUnFollowed) =>
      super.noSuchMethod(
        Invocation.setter(
          #postUnFollowed,
          _postUnFollowed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#selectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#selectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set selectedIndex(_i2.RxInt? _selectedIndex) => super.noSuchMethod(
        Invocation.setter(
          #selectedIndex,
          _selectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listSectors => (super.noSuchMethod(
        Invocation.getter(#listSectors),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSectors),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSectors),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listSectors(_i2.RxList<dynamic>? _listSectors) => super.noSuchMethod(
        Invocation.setter(
          #listSectors,
          _listSectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get sectorsSet => (super.noSuchMethod(
        Invocation.getter(#sectorsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set sectorsSet(Map<dynamic, dynamic>? _sectorsSet) => super.noSuchMethod(
        Invocation.setter(
          #sectorsSet,
          _sectorsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get page => (super.noSuchMethod(
        Invocation.getter(#page),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set page(int? _page) => super.noSuchMethod(
        Invocation.setter(
          #page,
          _page,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get registerNextStep1 => (super.noSuchMethod(
        Invocation.getter(#registerNextStep1),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#registerNextStep1),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#registerNextStep1),
        ),
      ) as _i2.RxBool);

  @override
  set registerNextStep1(_i2.RxBool? _registerNextStep1) => super.noSuchMethod(
        Invocation.setter(
          #registerNextStep1,
          _registerNextStep1,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i4.UserRepository);

  @override
  set userRepository(_i4.UserRepository? _userRepository) => super.noSuchMethod(
        Invocation.setter(
          #userRepository,
          _userRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.ZoneRepository get zoneRepository => (super.noSuchMethod(
        Invocation.getter(#zoneRepository),
        returnValue: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
        returnValueForMissingStub: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
      ) as _i5.ZoneRepository);

  @override
  set zoneRepository(_i5.ZoneRepository? _zoneRepository) => super.noSuchMethod(
        Invocation.setter(
          #zoneRepository,
          _zoneRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.SectorRepository get sectorRepository => (super.noSuchMethod(
        Invocation.getter(#sectorRepository),
        returnValue: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
        returnValueForMissingStub: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
      ) as _i6.SectorRepository);

  @override
  set sectorRepository(_i6.SectorRepository? _sectorRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #sectorRepository,
          _sectorRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Post get postModel => (super.noSuchMethod(
        Invocation.getter(#postModel),
        returnValue: _FakePost_18(
          this,
          Invocation.getter(#postModel),
        ),
        returnValueForMissingStub: _FakePost_18(
          this,
          Invocation.getter(#postModel),
        ),
      ) as _i11.Post);

  @override
  set postModel(_i11.Post? _postModel) => super.noSuchMethod(
        Invocation.setter(
          #postModel,
          _postModel,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ScrollController get scrollbarController => (super.noSuchMethod(
        Invocation.getter(#scrollbarController),
        returnValue: _FakeScrollController_7(
          this,
          Invocation.getter(#scrollbarController),
        ),
        returnValueForMissingStub: _FakeScrollController_7(
          this,
          Invocation.getter(#scrollbarController),
        ),
      ) as _i3.ScrollController);

  @override
  set scrollbarController(_i3.ScrollController? _scrollbarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #scrollbarController,
          _scrollbarController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get imageFiles => (super.noSuchMethod(
        Invocation.getter(#imageFiles),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#imageFiles),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#imageFiles),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set imageFiles(_i2.RxList<dynamic>? _imageFiles) => super.noSuchMethod(
        Invocation.setter(
          #imageFiles,
          _imageFiles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isRootFolder => (super.noSuchMethod(
        Invocation.getter(#isRootFolder),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isRootFolder(bool? _isRootFolder) => super.noSuchMethod(
        Invocation.setter(
          #isRootFolder,
          _isRootFolder,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get likeTapped => (super.noSuchMethod(
        Invocation.getter(#likeTapped),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#likeTapped),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#likeTapped),
        ),
      ) as _i2.RxBool);

  @override
  set likeTapped(_i2.RxBool? _likeTapped) => super.noSuchMethod(
        Invocation.setter(
          #likeTapped,
          _likeTapped,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get selectedPost => (super.noSuchMethod(
        Invocation.getter(#selectedPost),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#selectedPost),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#selectedPost),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set selectedPost(_i2.RxList<dynamic>? _selectedPost) => super.noSuchMethod(
        Invocation.setter(
          #selectedPost,
          _selectedPost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get unlikedPost => (super.noSuchMethod(
        Invocation.getter(#unlikedPost),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#unlikedPost),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#unlikedPost),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set unlikedPost(_i2.RxList<dynamic>? _unlikedPost) => super.noSuchMethod(
        Invocation.setter(
          #unlikedPost,
          _unlikedPost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sharedPost => (super.noSuchMethod(
        Invocation.getter(#sharedPost),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sharedPost),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sharedPost),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sharedPost(_i2.RxList<dynamic>? _sharedPost) => super.noSuchMethod(
        Invocation.setter(
          #sharedPost,
          _sharedPost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxDouble get postSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#postSelectedIndex),
        returnValue: _FakeRxDouble_4(
          this,
          Invocation.getter(#postSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxDouble_4(
          this,
          Invocation.getter(#postSelectedIndex),
        ),
      ) as _i2.RxDouble);

  @override
  set postSelectedIndex(_i2.RxDouble? _postSelectedIndex) => super.noSuchMethod(
        Invocation.setter(
          #postSelectedIndex,
          _postSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get postFollowedIndex => (super.noSuchMethod(
        Invocation.getter(#postFollowedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#postFollowedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#postFollowedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set postFollowedIndex(_i2.RxInt? _postFollowedIndex) => super.noSuchMethod(
        Invocation.setter(
          #postFollowedIndex,
          _postFollowedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get postSharedIndex => (super.noSuchMethod(
        Invocation.getter(#postSharedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#postSharedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#postSharedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set postSharedIndex(_i2.RxInt? _postSharedIndex) => super.noSuchMethod(
        Invocation.setter(
          #postSharedIndex,
          _postSharedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get comment => (super.noSuchMethod(
        Invocation.getter(#comment),
        returnValue: _FakeRxString_6(
          this,
          Invocation.getter(#comment),
        ),
        returnValueForMissingStub: _FakeRxString_6(
          this,
          Invocation.getter(#comment),
        ),
      ) as _i2.RxString);

  @override
  set comment(_i2.RxString? _comment) => super.noSuchMethod(
        Invocation.setter(
          #comment,
          _comment,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get sendComment => (super.noSuchMethod(
        Invocation.getter(#sendComment),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#sendComment),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#sendComment),
        ),
      ) as _i2.RxBool);

  @override
  set sendComment(_i2.RxBool? _sendComment) => super.noSuchMethod(
        Invocation.setter(
          #sendComment,
          _sendComment,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get commentList => (super.noSuchMethod(
        Invocation.getter(#commentList),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#commentList),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#commentList),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set commentList(_i2.RxList<dynamic>? _commentList) => super.noSuchMethod(
        Invocation.setter(
          #commentList,
          _commentList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get likeMyPost => (super.noSuchMethod(
        Invocation.getter(#likeMyPost),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#likeMyPost),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#likeMyPost),
        ),
      ) as _i2.RxBool);

  @override
  set likeMyPost(_i2.RxBool? _likeMyPost) => super.noSuchMethod(
        Invocation.setter(
          #likeMyPost,
          _likeMyPost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get shareMyPost => (super.noSuchMethod(
        Invocation.getter(#shareMyPost),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#shareMyPost),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#shareMyPost),
        ),
      ) as _i2.RxBool);

  @override
  set shareMyPost(_i2.RxBool? _shareMyPost) => super.noSuchMethod(
        Invocation.setter(
          #shareMyPost,
          _shareMyPost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get commentController => (super.noSuchMethod(
        Invocation.getter(#commentController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#commentController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#commentController),
        ),
      ) as _i3.TextEditingController);

  @override
  set commentController(_i3.TextEditingController? _commentController) =>
      super.noSuchMethod(
        Invocation.setter(
          #commentController,
          _commentController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get postContentController => (super.noSuchMethod(
        Invocation.getter(#postContentController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#postContentController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#postContentController),
        ),
      ) as _i3.TextEditingController);

  @override
  set postContentController(
          _i3.TextEditingController? _postContentController) =>
      super.noSuchMethod(
        Invocation.setter(
          #postContentController,
          _postContentController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get feedbackController => (super.noSuchMethod(
        Invocation.getter(#feedbackController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#feedbackController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#feedbackController),
        ),
      ) as _i3.TextEditingController);

  @override
  set feedbackController(_i3.TextEditingController? _feedbackController) =>
      super.noSuchMethod(
        Invocation.setter(
          #feedbackController,
          _feedbackController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get rating => (super.noSuchMethod(
        Invocation.getter(#rating),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#rating),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#rating),
        ),
      ) as _i2.RxInt);

  @override
  set rating(_i2.RxInt? _rating) => super.noSuchMethod(
        Invocation.setter(
          #rating,
          _rating,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set likeCount(_i2.RxInt? _likeCount) => super.noSuchMethod(
        Invocation.setter(
          #likeCount,
          _likeCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set shareCount(_i2.RxInt? _shareCount) => super.noSuchMethod(
        Invocation.setter(
          #shareCount,
          _shareCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set commentCount(_i2.RxInt? _commentCount) => super.noSuchMethod(
        Invocation.setter(
          #commentCount,
          _commentCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get copyLink => (super.noSuchMethod(
        Invocation.getter(#copyLink),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#copyLink),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#copyLink),
        ),
      ) as _i2.RxBool);

  @override
  set copyLink(_i2.RxBool? _copyLink) => super.noSuchMethod(
        Invocation.setter(
          #copyLink,
          _copyLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseARegion => (super.noSuchMethod(
        Invocation.getter(#chooseARegion),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseARegion),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseARegion),
        ),
      ) as _i2.RxBool);

  @override
  set chooseARegion(_i2.RxBool? _chooseARegion) => super.noSuchMethod(
        Invocation.setter(
          #chooseARegion,
          _chooseARegion,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseADivision => (super.noSuchMethod(
        Invocation.getter(#chooseADivision),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseADivision),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseADivision),
        ),
      ) as _i2.RxBool);

  @override
  set chooseADivision(_i2.RxBool? _chooseADivision) => super.noSuchMethod(
        Invocation.setter(
          #chooseADivision,
          _chooseADivision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseASubDivision => (super.noSuchMethod(
        Invocation.getter(#chooseASubDivision),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseASubDivision),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseASubDivision),
        ),
      ) as _i2.RxBool);

  @override
  set chooseASubDivision(_i2.RxBool? _chooseASubDivision) => super.noSuchMethod(
        Invocation.setter(
          #chooseASubDivision,
          _chooseASubDivision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get inputImage => (super.noSuchMethod(
        Invocation.getter(#inputImage),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#inputImage),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#inputImage),
        ),
      ) as _i2.RxBool);

  @override
  set inputImage(_i2.RxBool? _inputImage) => super.noSuchMethod(
        Invocation.setter(
          #inputImage,
          _inputImage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get filterBySector => (super.noSuchMethod(
        Invocation.getter(#filterBySector),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#filterBySector),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#filterBySector),
        ),
      ) as _i2.RxBool);

  @override
  set filterBySector(_i2.RxBool? _filterBySector) => super.noSuchMethod(
        Invocation.setter(
          #filterBySector,
          _filterBySector,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get filterByLocation => (super.noSuchMethod(
        Invocation.getter(#filterByLocation),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#filterByLocation),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#filterByLocation),
        ),
      ) as _i2.RxBool);

  @override
  set filterByLocation(_i2.RxBool? _filterByLocation) => super.noSuchMethod(
        Invocation.setter(
          #filterByLocation,
          _filterByLocation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.ImagePicker get picker => (super.noSuchMethod(
        Invocation.getter(#picker),
        returnValue: _FakeImagePicker_11(
          this,
          Invocation.getter(#picker),
        ),
        returnValueForMissingStub: _FakeImagePicker_11(
          this,
          Invocation.getter(#picker),
        ),
      ) as _i7.ImagePicker);

  @override
  set picker(_i7.ImagePicker? _picker) => super.noSuchMethod(
        Invocation.setter(
          #picker,
          _picker,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.File get feedbackImage => (super.noSuchMethod(
        Invocation.getter(#feedbackImage),
        returnValue: _FakeFile_12(
          this,
          Invocation.getter(#feedbackImage),
        ),
        returnValueForMissingStub: _FakeFile_12(
          this,
          Invocation.getter(#feedbackImage),
        ),
      ) as _i8.File);

  @override
  set feedbackImage(_i8.File? _feedbackImage) => super.noSuchMethod(
        Invocation.setter(
          #feedbackImage,
          _feedbackImage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadFeedbackImage => (super.noSuchMethod(
        Invocation.getter(#loadFeedbackImage),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadFeedbackImage),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadFeedbackImage),
        ),
      ) as _i2.RxBool);

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic refreshCommunity({bool? showMessage = false}) => super.noSuchMethod(
        Invocation.method(
          #refreshCommunity,
          [],
          {#showMessage: showMessage},
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllPosts(int? page) => super.noSuchMethod(
        Invocation.method(
          #getAllPosts,
          [page],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchRegions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchRegions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllDivisions(int? index) => super.noSuchMethod(
        Invocation.method(
          #getAllDivisions,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchDivisions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchDivisions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllSubdivisions(int? index) => super.noSuchMethod(
        Invocation.method(
          #getAllSubdivisions,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchSubdivisions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchSubdivisions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchSectors(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchSectors,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<dynamic> pickImage(_i7.ImageSource? source) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [source],
        ),
        returnValue: _i16.Future<dynamic>.value(),
        returnValueForMissingStub: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);

  @override
  dynamic feedbackImagePicker(String? source) => super.noSuchMethod(
        Invocation.method(
          #feedbackImagePicker,
          [source],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getSpecificZone(int? zoneId) => super.noSuchMethod(
        Invocation.method(
          #getSpecificZone,
          [zoneId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic createPost(_i11.Post? post) => super.noSuchMethod(
        Invocation.method(
          #createPost,
          [post],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic updatePost(_i11.Post? post) => super.noSuchMethod(
        Invocation.method(
          #updatePost,
          [post],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic likeUnlikePost(
    int? postId,
    int? index,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #likeUnlikePost,
          [
            postId,
            index,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic initializePostDetails(_i11.Post? post) => super.noSuchMethod(
        Invocation.method(
          #initializePostDetails,
          [post],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAPost(int? postId) => super.noSuchMethod(
        Invocation.method(
          #getAPost,
          [postId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic commentPost(
    int? postId,
    String? comment,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #commentPost,
          [
            postId,
            comment,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic sharePost(
    int? postId,
    int? index,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sharePost,
          [
            postId,
            index,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic deletePost(int? postId) => super.noSuchMethod(
        Invocation.method(
          #deletePost,
          [postId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic followUser(
    int? userId,
    int? index,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #followUser,
          [
            userId,
            index,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic unfollowUser(
    int? userId,
    int? index,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #unfollowUser,
          [
            userId,
            index,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void launchWhatsApp(String? message) => super.noSuchMethod(
        Invocation.method(
          #launchWhatsApp,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListener(_i17.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i17.Disposer);

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i18.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListenerId(
    Object? key,
    _i17.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i17.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EventsController].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsController extends _i1.Mock implements _i22.EventsController {
  @override
  _i2.Rx<_i15.UserModel> get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeRx_0<_i15.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeRx_0<_i15.UserModel>(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i2.Rx<_i15.UserModel>);

  @override
  set currentUser(_i2.Rx<_i15.UserModel>? _currentUser) => super.noSuchMethod(
        Invocation.setter(
          #currentUser,
          _currentUser,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get startingDate => (super.noSuchMethod(
        Invocation.getter(#startingDate),
        returnValue: _FakeRxString_6(
          this,
          Invocation.getter(#startingDate),
        ),
        returnValueForMissingStub: _FakeRxString_6(
          this,
          Invocation.getter(#startingDate),
        ),
      ) as _i2.RxString);

  @override
  set startingDate(_i2.RxString? _startingDate) => super.noSuchMethod(
        Invocation.setter(
          #startingDate,
          _startingDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get endingDate => (super.noSuchMethod(
        Invocation.getter(#endingDate),
        returnValue: _FakeRxString_6(
          this,
          Invocation.getter(#endingDate),
        ),
        returnValueForMissingStub: _FakeRxString_6(
          this,
          Invocation.getter(#endingDate),
        ),
      ) as _i2.RxString);

  @override
  set endingDate(_i2.RxString? _endingDate) => super.noSuchMethod(
        Invocation.setter(
          #endingDate,
          _endingDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.EventsRepository get eventsRepository => (super.noSuchMethod(
        Invocation.getter(#eventsRepository),
        returnValue: _FakeEventsRepository_19(
          this,
          Invocation.getter(#eventsRepository),
        ),
        returnValueForMissingStub: _FakeEventsRepository_19(
          this,
          Invocation.getter(#eventsRepository),
        ),
      ) as _i12.EventsRepository);

  @override
  set eventsRepository(_i12.EventsRepository? _eventsRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventsRepository,
          _eventsRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get allEvents => (super.noSuchMethod(
        Invocation.getter(#allEvents),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#allEvents),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#allEvents),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set allEvents(_i2.RxList<dynamic>? _allEvents) => super.noSuchMethod(
        Invocation.setter(
          #allEvents,
          _allEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get imageFiles => (super.noSuchMethod(
        Invocation.getter(#imageFiles),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#imageFiles),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#imageFiles),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set imageFiles(_i2.RxList<dynamic>? _imageFiles) => super.noSuchMethod(
        Invocation.setter(
          #imageFiles,
          _imageFiles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<dynamic> get listAllEvents => (super.noSuchMethod(
        Invocation.getter(#listAllEvents),
        returnValue: <dynamic>[],
        returnValueForMissingStub: <dynamic>[],
      ) as List<dynamic>);

  @override
  set listAllEvents(List<dynamic>? _listAllEvents) => super.noSuchMethod(
        Invocation.setter(
          #listAllEvents,
          _listAllEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingEvents => (super.noSuchMethod(
        Invocation.getter(#loadingEvents),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingEvents),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingEvents),
        ),
      ) as _i2.RxBool);

  @override
  set loadingEvents(_i2.RxBool? _loadingEvents) => super.noSuchMethod(
        Invocation.setter(
          #loadingEvents,
          _loadingEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get createEvents => (super.noSuchMethod(
        Invocation.getter(#createEvents),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#createEvents),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#createEvents),
        ),
      ) as _i2.RxBool);

  @override
  set createEvents(_i2.RxBool? _createEvents) => super.noSuchMethod(
        Invocation.setter(
          #createEvents,
          _createEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get createUpdateEvents => (super.noSuchMethod(
        Invocation.getter(#createUpdateEvents),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#createUpdateEvents),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#createUpdateEvents),
        ),
      ) as _i2.RxBool);

  @override
  set createUpdateEvents(_i2.RxBool? _createUpdateEvents) => super.noSuchMethod(
        Invocation.setter(
          #createUpdateEvents,
          _createUpdateEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get updateEvents => (super.noSuchMethod(
        Invocation.getter(#updateEvents),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#updateEvents),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#updateEvents),
        ),
      ) as _i2.RxBool);

  @override
  set updateEvents(_i2.RxBool? _updateEvents) => super.noSuchMethod(
        Invocation.setter(
          #updateEvents,
          _updateEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get searchField => (super.noSuchMethod(
        Invocation.getter(#searchField),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#searchField),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#searchField),
        ),
      ) as _i2.RxBool);

  @override
  set searchField(_i2.RxBool? _searchField) => super.noSuchMethod(
        Invocation.setter(
          #searchField,
          _searchField,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get noFilter => (super.noSuchMethod(
        Invocation.getter(#noFilter),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#noFilter),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#noFilter),
        ),
      ) as _i2.RxBool);

  @override
  set noFilter(_i2.RxBool? _noFilter) => super.noSuchMethod(
        Invocation.setter(
          #noFilter,
          _noFilter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get page => (super.noSuchMethod(
        Invocation.getter(#page),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set page(int? _page) => super.noSuchMethod(
        Invocation.setter(
          #page,
          _page,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Event get event => (super.noSuchMethod(
        Invocation.getter(#event),
        returnValue: _FakeEvent_20(
          this,
          Invocation.getter(#event),
        ),
        returnValueForMissingStub: _FakeEvent_20(
          this,
          Invocation.getter(#event),
        ),
      ) as _i13.Event);

  @override
  set event(_i13.Event? _event) => super.noSuchMethod(
        Invocation.setter(
          #event,
          _event,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Event get eventDetails => (super.noSuchMethod(
        Invocation.getter(#eventDetails),
        returnValue: _FakeEvent_20(
          this,
          Invocation.getter(#eventDetails),
        ),
        returnValueForMissingStub: _FakeEvent_20(
          this,
          Invocation.getter(#eventDetails),
        ),
      ) as _i13.Event);

  @override
  set eventDetails(_i13.Event? _eventDetails) => super.noSuchMethod(
        Invocation.setter(
          #eventDetails,
          _eventDetails,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ScrollController get scrollbarController => (super.noSuchMethod(
        Invocation.getter(#scrollbarController),
        returnValue: _FakeScrollController_7(
          this,
          Invocation.getter(#scrollbarController),
        ),
        returnValueForMissingStub: _FakeScrollController_7(
          this,
          Invocation.getter(#scrollbarController),
        ),
      ) as _i3.ScrollController);

  @override
  set scrollbarController(_i3.ScrollController? _scrollbarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #scrollbarController,
          _scrollbarController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingRegions => (super.noSuchMethod(
        Invocation.getter(#loadingRegions),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingRegions),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingRegions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingRegions(_i2.RxBool? _loadingRegions) => super.noSuchMethod(
        Invocation.setter(
          #loadingRegions,
          _loadingRegions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get regions => (super.noSuchMethod(
        Invocation.getter(#regions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set regions(_i2.RxList<dynamic>? _regions) => super.noSuchMethod(
        Invocation.setter(
          #regions,
          _regions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get regionSelected => (super.noSuchMethod(
        Invocation.getter(#regionSelected),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#regionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#regionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set regionSelected(_i2.RxBool? _regionSelected) => super.noSuchMethod(
        Invocation.setter(
          #regionSelected,
          _regionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get regionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#regionSelectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#regionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#regionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set regionSelectedIndex(_i2.RxInt? _regionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #regionSelectedIndex,
          _regionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listRegions => (super.noSuchMethod(
        Invocation.getter(#listRegions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listRegions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listRegions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listRegions(_i2.RxList<dynamic>? _listRegions) => super.noSuchMethod(
        Invocation.setter(
          #listRegions,
          _listRegions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get regionsSet => (super.noSuchMethod(
        Invocation.getter(#regionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set regionsSet(Map<dynamic, dynamic>? _regionsSet) => super.noSuchMethod(
        Invocation.setter(
          #regionsSet,
          _regionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get regionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#regionSelectedValue),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#regionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set regionSelectedValue(_i2.RxList<dynamic>? _regionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #regionSelectedValue,
          _regionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingDivisions => (super.noSuchMethod(
        Invocation.getter(#loadingDivisions),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingDivisions),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingDivisions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingDivisions(_i2.RxBool? _loadingDivisions) => super.noSuchMethod(
        Invocation.setter(
          #loadingDivisions,
          _loadingDivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get divisions => (super.noSuchMethod(
        Invocation.getter(#divisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set divisions(_i2.RxList<dynamic>? _divisions) => super.noSuchMethod(
        Invocation.setter(
          #divisions,
          _divisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get divisionSelected => (super.noSuchMethod(
        Invocation.getter(#divisionSelected),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#divisionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#divisionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set divisionSelected(_i2.RxBool? _divisionSelected) => super.noSuchMethod(
        Invocation.setter(
          #divisionSelected,
          _divisionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get divisionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#divisionSelectedValue),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#divisionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set divisionSelectedValue(_i2.RxList<dynamic>? _divisionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #divisionSelectedValue,
          _divisionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get divisionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#divisionSelectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#divisionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#divisionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set divisionSelectedIndex(_i2.RxInt? _divisionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #divisionSelectedIndex,
          _divisionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listDivisions => (super.noSuchMethod(
        Invocation.getter(#listDivisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listDivisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listDivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listDivisions(_i2.RxList<dynamic>? _listDivisions) => super.noSuchMethod(
        Invocation.setter(
          #listDivisions,
          _listDivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get divisionsSet => (super.noSuchMethod(
        Invocation.getter(#divisionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set divisionsSet(Map<dynamic, dynamic>? _divisionsSet) => super.noSuchMethod(
        Invocation.setter(
          #divisionsSet,
          _divisionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingSubdivisions => (super.noSuchMethod(
        Invocation.getter(#loadingSubdivisions),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSubdivisions),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSubdivisions),
        ),
      ) as _i2.RxBool);

  @override
  set loadingSubdivisions(_i2.RxBool? _loadingSubdivisions) =>
      super.noSuchMethod(
        Invocation.setter(
          #loadingSubdivisions,
          _loadingSubdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get subdivisions => (super.noSuchMethod(
        Invocation.getter(#subdivisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set subdivisions(_i2.RxList<dynamic>? _subdivisions) => super.noSuchMethod(
        Invocation.setter(
          #subdivisions,
          _subdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get subdivisionSelected => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelected),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#subdivisionSelected),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#subdivisionSelected),
        ),
      ) as _i2.RxBool);

  @override
  set subdivisionSelected(_i2.RxBool? _subdivisionSelected) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelected,
          _subdivisionSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get subdivisionSelectedValue => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelectedValue),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisionSelectedValue),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#subdivisionSelectedValue),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set subdivisionSelectedValue(
          _i2.RxList<dynamic>? _subdivisionSelectedValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelectedValue,
          _subdivisionSelectedValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get subdivisionSelectedIndex => (super.noSuchMethod(
        Invocation.getter(#subdivisionSelectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#subdivisionSelectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#subdivisionSelectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set subdivisionSelectedIndex(_i2.RxInt? _subdivisionSelectedIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionSelectedIndex,
          _subdivisionSelectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listSubdivisions => (super.noSuchMethod(
        Invocation.getter(#listSubdivisions),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSubdivisions),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSubdivisions),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listSubdivisions(_i2.RxList<dynamic>? _listSubdivisions) =>
      super.noSuchMethod(
        Invocation.setter(
          #listSubdivisions,
          _listSubdivisions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get subdivisionsSet => (super.noSuchMethod(
        Invocation.getter(#subdivisionsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set subdivisionsSet(Map<dynamic, dynamic>? _subdivisionsSet) =>
      super.noSuchMethod(
        Invocation.setter(
          #subdivisionsSet,
          _subdivisionsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loadingSectors => (super.noSuchMethod(
        Invocation.getter(#loadingSectors),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSectors),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#loadingSectors),
        ),
      ) as _i2.RxBool);

  @override
  set loadingSectors(_i2.RxBool? _loadingSectors) => super.noSuchMethod(
        Invocation.setter(
          #loadingSectors,
          _loadingSectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sectors => (super.noSuchMethod(
        Invocation.getter(#sectors),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectors),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectors),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sectors(_i2.RxList<dynamic>? _sectors) => super.noSuchMethod(
        Invocation.setter(
          #sectors,
          _sectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get sectorsSelected => (super.noSuchMethod(
        Invocation.getter(#sectorsSelected),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectorsSelected),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#sectorsSelected),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set sectorsSelected(_i2.RxList<dynamic>? _sectorsSelected) =>
      super.noSuchMethod(
        Invocation.setter(
          #sectorsSelected,
          _sectorsSelected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: _FakeRxInt_5(
          this,
          Invocation.getter(#selectedIndex),
        ),
        returnValueForMissingStub: _FakeRxInt_5(
          this,
          Invocation.getter(#selectedIndex),
        ),
      ) as _i2.RxInt);

  @override
  set selectedIndex(_i2.RxInt? _selectedIndex) => super.noSuchMethod(
        Invocation.setter(
          #selectedIndex,
          _selectedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<dynamic> get listSectors => (super.noSuchMethod(
        Invocation.getter(#listSectors),
        returnValue: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSectors),
        ),
        returnValueForMissingStub: _FakeRxList_2<dynamic>(
          this,
          Invocation.getter(#listSectors),
        ),
      ) as _i2.RxList<dynamic>);

  @override
  set listSectors(_i2.RxList<dynamic>? _listSectors) => super.noSuchMethod(
        Invocation.setter(
          #listSectors,
          _listSectors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get sectorsSet => (super.noSuchMethod(
        Invocation.getter(#sectorsSet),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  set sectorsSet(Map<dynamic, dynamic>? _sectorsSet) => super.noSuchMethod(
        Invocation.setter(
          #sectorsSet,
          _sectorsSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_8(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i4.UserRepository);

  @override
  set userRepository(_i4.UserRepository? _userRepository) => super.noSuchMethod(
        Invocation.setter(
          #userRepository,
          _userRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.ZoneRepository get zoneRepository => (super.noSuchMethod(
        Invocation.getter(#zoneRepository),
        returnValue: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
        returnValueForMissingStub: _FakeZoneRepository_9(
          this,
          Invocation.getter(#zoneRepository),
        ),
      ) as _i5.ZoneRepository);

  @override
  set zoneRepository(_i5.ZoneRepository? _zoneRepository) => super.noSuchMethod(
        Invocation.setter(
          #zoneRepository,
          _zoneRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.SectorRepository get sectorRepository => (super.noSuchMethod(
        Invocation.getter(#sectorRepository),
        returnValue: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
        returnValueForMissingStub: _FakeSectorRepository_10(
          this,
          Invocation.getter(#sectorRepository),
        ),
      ) as _i6.SectorRepository);

  @override
  set sectorRepository(_i6.SectorRepository? _sectorRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #sectorRepository,
          _sectorRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseARegion => (super.noSuchMethod(
        Invocation.getter(#chooseARegion),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseARegion),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseARegion),
        ),
      ) as _i2.RxBool);

  @override
  set chooseARegion(_i2.RxBool? _chooseARegion) => super.noSuchMethod(
        Invocation.setter(
          #chooseARegion,
          _chooseARegion,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseADivision => (super.noSuchMethod(
        Invocation.getter(#chooseADivision),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseADivision),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseADivision),
        ),
      ) as _i2.RxBool);

  @override
  set chooseADivision(_i2.RxBool? _chooseADivision) => super.noSuchMethod(
        Invocation.setter(
          #chooseADivision,
          _chooseADivision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get chooseASubDivision => (super.noSuchMethod(
        Invocation.getter(#chooseASubDivision),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseASubDivision),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#chooseASubDivision),
        ),
      ) as _i2.RxBool);

  @override
  set chooseASubDivision(_i2.RxBool? _chooseASubDivision) => super.noSuchMethod(
        Invocation.setter(
          #chooseASubDivision,
          _chooseASubDivision,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get inputImage => (super.noSuchMethod(
        Invocation.getter(#inputImage),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#inputImage),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#inputImage),
        ),
      ) as _i2.RxBool);

  @override
  set inputImage(_i2.RxBool? _inputImage) => super.noSuchMethod(
        Invocation.setter(
          #inputImage,
          _inputImage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get filterBySector => (super.noSuchMethod(
        Invocation.getter(#filterBySector),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#filterBySector),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#filterBySector),
        ),
      ) as _i2.RxBool);

  @override
  set filterBySector(_i2.RxBool? _filterBySector) => super.noSuchMethod(
        Invocation.setter(
          #filterBySector,
          _filterBySector,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get filterByLocation => (super.noSuchMethod(
        Invocation.getter(#filterByLocation),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#filterByLocation),
        ),
        returnValueForMissingStub: _FakeRxBool_3(
          this,
          Invocation.getter(#filterByLocation),
        ),
      ) as _i2.RxBool);

  @override
  set filterByLocation(_i2.RxBool? _filterByLocation) => super.noSuchMethod(
        Invocation.setter(
          #filterByLocation,
          _filterByLocation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get eventOrganizerController => (super.noSuchMethod(
        Invocation.getter(#eventOrganizerController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#eventOrganizerController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#eventOrganizerController),
        ),
      ) as _i3.TextEditingController);

  @override
  set eventOrganizerController(
          _i3.TextEditingController? _eventOrganizerController) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventOrganizerController,
          _eventOrganizerController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get eventLocation => (super.noSuchMethod(
        Invocation.getter(#eventLocation),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#eventLocation),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#eventLocation),
        ),
      ) as _i3.TextEditingController);

  @override
  set eventLocation(_i3.TextEditingController? _eventLocation) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventLocation,
          _eventLocation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get startingDateDisplay => (super.noSuchMethod(
        Invocation.getter(#startingDateDisplay),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#startingDateDisplay),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#startingDateDisplay),
        ),
      ) as _i3.TextEditingController);

  @override
  set startingDateDisplay(_i3.TextEditingController? _startingDateDisplay) =>
      super.noSuchMethod(
        Invocation.setter(
          #startingDateDisplay,
          _startingDateDisplay,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get endingDateDisplay => (super.noSuchMethod(
        Invocation.getter(#endingDateDisplay),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#endingDateDisplay),
        ),
        returnValueForMissingStub: _FakeTextEditingController_1(
          this,
          Invocation.getter(#endingDateDisplay),
        ),
      ) as _i3.TextEditingController);

  @override
  set endingDateDisplay(_i3.TextEditingController? _endingDateDisplay) =>
      super.noSuchMethod(
        Invocation.setter(
          #endingDateDisplay,
          _endingDateDisplay,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_13<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<dynamic> refreshEvents({bool? showMessage = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshEvents,
          [],
          {#showMessage: showMessage},
        ),
        returnValue: _i16.Future<dynamic>.value(),
        returnValueForMissingStub: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<dynamic> pickImage(_i7.ImageSource? source) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [source],
        ),
        returnValue: _i16.Future<dynamic>.value(),
        returnValueForMissingStub: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);

  @override
  void filterSearchRegions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchRegions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllDivisions(int? index) => super.noSuchMethod(
        Invocation.method(
          #getAllDivisions,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchDivisions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchDivisions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllSubdivisions(int? index) => super.noSuchMethod(
        Invocation.method(
          #getAllSubdivisions,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchSubdivisions(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchSubdivisions,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterSearchSectors(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchSectors,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic filterSearchEventsBySubdivisionZone(String? query) =>
      super.noSuchMethod(
        Invocation.method(
          #filterSearchEventsBySubdivisionZone,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic filterSearchEventsByDivisionZone(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchEventsByDivisionZone,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic filterSearchEventsByRegionZone(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterSearchEventsByRegionZone,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getSpecificZone(int? zoneId) => super.noSuchMethod(
        Invocation.method(
          #getSpecificZone,
          [zoneId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAllEvents(int? page) => super.noSuchMethod(
        Invocation.method(
          #getAllEvents,
          [page],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic getAnEvent(int? eventId) => super.noSuchMethod(
        Invocation.method(
          #getAnEvent,
          [eventId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic createEvent(_i13.Event? event) => super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic updateEvent(_i13.Event? event) => super.noSuchMethod(
        Invocation.method(
          #updateEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic deleteEvent(int? eventId) => super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [eventId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListener(_i17.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i17.Disposer);

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i18.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListenerId(
    Object? key,
    _i17.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i17.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
